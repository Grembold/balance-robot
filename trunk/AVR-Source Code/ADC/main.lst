   1               		.file	"main.c"
   2               		.arch atmega16
   3               	__SREG__ = 0x3f
   4               	__SP_H__ = 0x3e
   5               	__SP_L__ = 0x3d
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  17               	.Ltext0:
  18               	.global	main
  20               	main:
  21               	.LFB2:
  22               	.LM1:
  23               	/* prologue: frame size=32 */
  24 0000 C0E0      		ldi r28,lo8(__stack - 32)
  25 0002 D0E0      		ldi r29,hi8(__stack - 32)
  26 0004 DEBF      		out __SP_H__,r29
  27 0006 CDBF      		out __SP_L__,r28
  28               	/* prologue end (size=4) */
  29               	.LM2:
  30 0008 8091 3A00 		lds r24,58
  31 000c 867F      		andi r24,lo8(-10)
  32 000e 8093 3A00 		sts 58,r24
  33               	.LM3:
  34 0012 8091 3B00 		lds r24,59
  35 0016 8160      		ori r24,lo8(1)
  36 0018 8093 3B00 		sts 59,r24
  37               	.LM4:
  38 001c 8CE0      		ldi r24,lo8(12)
  39 001e 0E94 0000 		call lcd_init
  40               	.LM5:
  41               	/* #APP */
  42 0022 7894      		sei
  43               	/* #NOAPP */
  44               	.L2:
  45               	.LBB2:
  46               	.LM6:
  47 0024 83E0      		ldi r24,lo8(3)
  48 0026 0E94 0000 		call ReadChannel
  49 002a 9A83      		std Y+2,r25
  50 002c 8983      		std Y+1,r24
  51               	.LM7:
  52 002e 9E01      		movw r18,r28
  53 0030 2D5F      		subi r18,lo8(-(3))
  54 0032 3F4F      		sbci r19,hi8(-(3))
  55 0034 8981      		ldd r24,Y+1
  56 0036 9A81      		ldd r25,Y+2
  57 0038 9695      		lsr r25
  58 003a 8795      		ror r24
  59 003c 9695      		lsr r25
  60 003e 8795      		ror r24
  61 0040 4AE0      		ldi r20,lo8(10)
  62 0042 50E0      		ldi r21,hi8(10)
  63 0044 B901      		movw r22,r18
  64 0046 0E94 0000 		call itoa
  65               	.LM8:
  66 004a CE01      		movw r24,r28
  67 004c 0396      		adiw r24,3
  68 004e 0E94 0000 		call lcd_puts
  69               	.LM9:
  70 0052 0E94 0000 		call wait_until_key_pressed
  71               	.LM10:
  72 0056 0E94 0000 		call lcd_clrscr
  73               	.LBE2:
  74               	.LM11:
  75 005a E4CF      		rjmp .L2
  76               	/* epilogue: frame size=32 */
  77               	/* epilogue: noreturn */
  78               	/* epilogue end (size=0) */
  79               	/* function main size 47 (43) */
  80               	.LFE2:
  82               	.global	wait_until_key_pressed
  84               	wait_until_key_pressed:
  85               	.LFB3:
  86               	.LM12:
  87               	/* prologue: frame size=4 */
  88 005c CF93      		push r28
  89 005e DF93      		push r29
  90 0060 CDB7      		in r28,__SP_L__
  91 0062 DEB7      		in r29,__SP_H__
  92 0064 2497      		sbiw r28,4
  93 0066 0FB6      		in __tmp_reg__,__SREG__
  94 0068 F894      		cli
  95 006a DEBF      		out __SP_H__,r29
  96 006c 0FBE      		out __SREG__,__tmp_reg__
  97 006e CDBF      		out __SP_L__,r28
  98               	/* prologue end (size=10) */
  99               	.L5:
 100               	.LM13:
 101 0070 8091 3900 		lds r24,57
 102 0074 8983      		std Y+1,r24
 103               	.LM14:
 104 0076 1C82      		std Y+4,__zero_reg__
 105 0078 1B82      		std Y+3,__zero_reg__
 106               	.L8:
 107               	.LM15:
 108 007a 8B81      		ldd r24,Y+3
 109 007c 9C81      		ldd r25,Y+4
 110 007e 2FEF      		ldi r18,hi8(-1)
 111 0080 8F3F      		cpi r24,lo8(-1)
 112 0082 9207      		cpc r25,r18
 113 0084 31F0      		breq .L9
 114 0086 8B81      		ldd r24,Y+3
 115 0088 9C81      		ldd r25,Y+4
 116 008a 0196      		adiw r24,1
 117 008c 9C83      		std Y+4,r25
 118 008e 8B83      		std Y+3,r24
 119 0090 F4CF      		rjmp .L8
 120               	.L9:
 121               	.LM16:
 122 0092 8091 3900 		lds r24,57
 123 0096 8A83      		std Y+2,r24
 124               	.LM17:
 125 0098 9981      		ldd r25,Y+1
 126 009a 8A81      		ldd r24,Y+2
 127 009c 8923      		and r24,r25
 128 009e 8983      		std Y+1,r24
 129               	.LM18:
 130 00a0 8981      		ldd r24,Y+1
 131 00a2 9927      		clr r25
 132 00a4 8170      		andi r24,lo8(1)
 133 00a6 9070      		andi r25,hi8(1)
 134 00a8 0097      		sbiw r24,0
 135 00aa 09F0      		breq .L13
 136 00ac E1CF      		rjmp .L5
 137               	.L13:
 138               	.LM19:
 139 00ae 8091 3900 		lds r24,57
 140 00b2 9927      		clr r25
 141 00b4 8170      		andi r24,lo8(1)
 142 00b6 9070      		andi r25,hi8(1)
 143 00b8 0097      		sbiw r24,0
 144 00ba 09F4      		brne .L4
 145 00bc F8CF      		rjmp .L13
 146               	.L4:
 147               	/* epilogue: frame size=4 */
 148 00be 2496      		adiw r28,4
 149 00c0 0FB6      		in __tmp_reg__,__SREG__
 150 00c2 F894      		cli
 151 00c4 DEBF      		out __SP_H__,r29
 152 00c6 0FBE      		out __SREG__,__tmp_reg__
 153 00c8 CDBF      		out __SP_L__,r28
 154 00ca DF91      		pop r29
 155 00cc CF91      		pop r28
 156 00ce 0895      		ret
 157               	/* epilogue end (size=9) */
 158               	/* function wait_until_key_pressed size 58 (39) */
 159               	.LFE3:
 161               	.global	ReadChannel
 163               	ReadChannel:
 164               	.LFB4:
 165               	.LM20:
 166               	/* prologue: frame size=4 */
 167 00d0 CF93      		push r28
 168 00d2 DF93      		push r29
 169 00d4 CDB7      		in r28,__SP_L__
 170 00d6 DEB7      		in r29,__SP_H__
 171 00d8 2497      		sbiw r28,4
 172 00da 0FB6      		in __tmp_reg__,__SREG__
 173 00dc F894      		cli
 174 00de DEBF      		out __SP_H__,r29
 175 00e0 0FBE      		out __SREG__,__tmp_reg__
 176 00e2 CDBF      		out __SP_L__,r28
 177               	/* prologue end (size=10) */
 178 00e4 8983      		std Y+1,r24
 179               	.LM21:
 180 00e6 1C82      		std Y+4,__zero_reg__
 181 00e8 1B82      		std Y+3,__zero_reg__
 182               	.LM22:
 183 00ea 83E8      		ldi r24,lo8(-125)
 184 00ec 8093 2600 		sts 38,r24
 185               	.LM23:
 186 00f0 8981      		ldd r24,Y+1
 187 00f2 8093 2700 		sts 39,r24
 188               	.LM24:
 189 00f6 8091 2700 		lds r24,39
 190 00fa 8064      		ori r24,lo8(64)
 191 00fc 8093 2700 		sts 39,r24
 192               	.LM25:
 193 0100 8091 2600 		lds r24,38
 194 0104 8064      		ori r24,lo8(64)
 195 0106 8093 2600 		sts 38,r24
 196               	.L15:
 197               	.LM26:
 198 010a 8091 2600 		lds r24,38
 199 010e 9927      		clr r25
 200 0110 8074      		andi r24,lo8(64)
 201 0112 9070      		andi r25,hi8(64)
 202 0114 0097      		sbiw r24,0
 203 0116 09F0      		breq .L16
 204 0118 F8CF      		rjmp .L15
 205               	.L16:
 206               	.LM27:
 207 011a 8B81      		ldd r24,Y+3
 208 011c 9C81      		ldd r25,Y+4
 209 011e 2091 2400 		lds r18,36
 210 0122 3091 2500 		lds r19,(36)+1
 211 0126 820F      		add r24,r18
 212 0128 931F      		adc r25,r19
 213 012a 9C83      		std Y+4,r25
 214 012c 8B83      		std Y+3,r24
 215               	.LM28:
 216 012e 1A82      		std Y+2,__zero_reg__
 217               	.L17:
 218 0130 8A81      		ldd r24,Y+2
 219 0132 8430      		cpi r24,lo8(4)
 220 0134 D8F4      		brsh .L18
 221               	.LM29:
 222 0136 8091 2600 		lds r24,38
 223 013a 8064      		ori r24,lo8(64)
 224 013c 8093 2600 		sts 38,r24
 225               	.L20:
 226               	.LM30:
 227 0140 8091 2600 		lds r24,38
 228 0144 9927      		clr r25
 229 0146 8074      		andi r24,lo8(64)
 230 0148 9070      		andi r25,hi8(64)
 231 014a 0097      		sbiw r24,0
 232 014c 09F0      		breq .L21
 233 014e F8CF      		rjmp .L20
 234               	.L21:
 235               	.LM31:
 236 0150 2B81      		ldd r18,Y+3
 237 0152 3C81      		ldd r19,Y+4
 238 0154 8091 2400 		lds r24,36
 239 0158 9091 2500 		lds r25,(36)+1
 240 015c 820F      		add r24,r18
 241 015e 931F      		adc r25,r19
 242 0160 9C83      		std Y+4,r25
 243 0162 8B83      		std Y+3,r24
 244               	.LM32:
 245 0164 8A81      		ldd r24,Y+2
 246 0166 8F5F      		subi r24,lo8(-(1))
 247 0168 8A83      		std Y+2,r24
 248 016a E2CF      		rjmp .L17
 249               	.L18:
 250               	.LM33:
 251 016c 9FE7      		ldi r25,lo8(127)
 252 016e 8091 2600 		lds r24,38
 253 0172 8923      		and r24,r25
 254 0174 8093 2600 		sts 38,r24
 255               	.LM34:
 256 0178 8B81      		ldd r24,Y+3
 257 017a 9C81      		ldd r25,Y+4
 258 017c 9695      		lsr r25
 259 017e 8795      		ror r24
 260 0180 9695      		lsr r25
 261 0182 8795      		ror r24
 262 0184 9C83      		std Y+4,r25
 263 0186 8B83      		std Y+3,r24
 264               	.LM35:
 265 0188 8B81      		ldd r24,Y+3
 266 018a 9C81      		ldd r25,Y+4
 267               	/* epilogue: frame size=4 */
 268 018c 2496      		adiw r28,4
 269 018e 0FB6      		in __tmp_reg__,__SREG__
 270 0190 F894      		cli
 271 0192 DEBF      		out __SP_H__,r29
 272 0194 0FBE      		out __SREG__,__tmp_reg__
 273 0196 CDBF      		out __SP_L__,r28
 274 0198 DF91      		pop r29
 275 019a CF91      		pop r28
 276 019c 0895      		ret
 277               	/* epilogue end (size=9) */
 278               	/* function ReadChannel size 103 (84) */
 279               	.LFE4:
 281               	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\DOKUME~1\Olaf\LOKALE~1\Temp/cc0caaaa.s:3      *ABS*:0000003f __SREG__
C:\DOKUME~1\Olaf\LOKALE~1\Temp/cc0caaaa.s:4      *ABS*:0000003e __SP_H__
C:\DOKUME~1\Olaf\LOKALE~1\Temp/cc0caaaa.s:5      *ABS*:0000003d __SP_L__
C:\DOKUME~1\Olaf\LOKALE~1\Temp/cc0caaaa.s:6      *ABS*:00000000 __tmp_reg__
C:\DOKUME~1\Olaf\LOKALE~1\Temp/cc0caaaa.s:7      *ABS*:00000001 __zero_reg__
C:\DOKUME~1\Olaf\LOKALE~1\Temp/cc0caaaa.s:20     .text:00000000 main
C:\DOKUME~1\Olaf\LOKALE~1\Temp/cc0caaaa.s:163    .text:000000d0 ReadChannel
C:\DOKUME~1\Olaf\LOKALE~1\Temp/cc0caaaa.s:84     .text:0000005c wait_until_key_pressed

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
__stack
lcd_init
itoa
lcd_puts
lcd_clrscr
