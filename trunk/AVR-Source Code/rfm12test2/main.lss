
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000013f8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000008e  00800060  000013f8  0000148c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000066  008000ee  008000ee  0000151a  2**0
                  ALLOC
  3 .stab         00000378  00000000  00000000  0000151c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000071  00000000  00000000  00001894  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000060  00000000  00000000  00001905  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000001a9  00000000  00000000  00001965  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000108e  00000000  00000000  00001b0e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000496  00000000  00000000  00002b9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000197d  00000000  00000000  00003032  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000130  00000000  00000000  000049b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000303  00000000  00000000  00004ae0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001291  00000000  00000000  00004de3  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000001d8  00000000  00000000  00006074  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 03 08 	jmp	0x1006	; 0x1006 <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e8 ef       	ldi	r30, 0xF8	; 248
      68:	f3 e1       	ldi	r31, 0x13	; 19
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	ae 3e       	cpi	r26, 0xEE	; 238
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	ae ee       	ldi	r26, 0xEE	; 238
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a4 35       	cpi	r26, 0x54	; 84
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 49 00 	call	0x92	; 0x92 <main>
      8a:	0c 94 fb 09 	jmp	0x13f6	; 0x13f6 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
#include "rf12.h"
//------------------------------------------------------------------------------

int main (void) 
{
      92:	8f 92       	push	r8
      94:	9f 92       	push	r9
      96:	af 92       	push	r10
      98:	bf 92       	push	r11
      9a:	cf 92       	push	r12
      9c:	df 92       	push	r13
      9e:	ef 92       	push	r14
      a0:	ff 92       	push	r15
      a2:	0f 93       	push	r16
      a4:	1f 93       	push	r17
      a6:	cf 93       	push	r28
      a8:	df 93       	push	r29
      aa:	cd b7       	in	r28, 0x3d	; 61
      ac:	de b7       	in	r29, 0x3e	; 62
      ae:	c4 56       	subi	r28, 0x64	; 100
      b0:	d0 40       	sbci	r29, 0x00	; 0
      b2:	0f b6       	in	r0, 0x3f	; 63
      b4:	f8 94       	cli
      b6:	de bf       	out	0x3e, r29	; 62
      b8:	0f be       	out	0x3f, r0	; 63
      ba:	cd bf       	out	0x3d, r28	; 61
	unsigned char test[100]="\n";
      bc:	80 91 89 00 	lds	r24, 0x0089
      c0:	90 91 8a 00 	lds	r25, 0x008A
      c4:	9a 83       	std	Y+2, r25	; 0x02
      c6:	89 83       	std	Y+1, r24	; 0x01
      c8:	82 e6       	ldi	r24, 0x62	; 98
      ca:	fe 01       	movw	r30, r28
      cc:	33 96       	adiw	r30, 0x03	; 3
      ce:	11 92       	st	Z+, r1
      d0:	8a 95       	dec	r24
      d2:	e9 f7       	brne	.-6      	; 0xce <main+0x3c>
	unsigned char pong[10]="pong";
	usart_init(); // Serielle Schnittstelle initialisieren
      d4:	0e 94 fe 07 	call	0xffc	; 0xffc <usart_init>
	DDRD = (1<<6)|(1<<4);
      d8:	80 e5       	ldi	r24, 0x50	; 80
      da:	81 bb       	out	0x11, r24	; 17

	PORTD |= (1<<6);
      dc:	96 9a       	sbi	0x12, 6	; 18
	PORTD |= (1<<4);
      de:	94 9a       	sbi	0x12, 4	; 18
	
	//DDRB = (1<<3);
	//PORTB = (1<<3);
	
	usart_write("Usart Initialieisrt\r\n"); 
      e0:	80 e6       	ldi	r24, 0x60	; 96
      e2:	90 e0       	ldi	r25, 0x00	; 0
      e4:	9f 93       	push	r25
      e6:	8f 93       	push	r24
      e8:	0e 94 66 08 	call	0x10cc	; 0x10cc <usart_write>

	rf12_init();					// ein paar Register setzen (z.B. CLK auf 10MHz)
      ec:	0e 94 57 02 	call	0x4ae	; 0x4ae <rf12_init>
	rf12_setfreq(RF12FREQ(433.92));	// Sende/Empfangsfrequenz auf 433,92MHz einstellen
      f0:	80 e2       	ldi	r24, 0x20	; 32
      f2:	96 e0       	ldi	r25, 0x06	; 6
      f4:	0e 94 0b 02 	call	0x416	; 0x416 <rf12_setfreq>
	rf12_setbandwidth(5, 1, 4);		// 200kHz Bandbreite, -6dB Verstärkung, DRSSI threshold: -79dBm 
      f8:	44 e0       	ldi	r20, 0x04	; 4
      fa:	61 e0       	ldi	r22, 0x01	; 1
      fc:	85 e0       	ldi	r24, 0x05	; 5
      fe:	0e 94 2d 02 	call	0x45a	; 0x45a <rf12_setbandwidth>
	rf12_setbaud(9600);				// 19200 baud
     102:	80 e8       	ldi	r24, 0x80	; 128
     104:	95 e2       	ldi	r25, 0x25	; 37
     106:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <rf12_setbaud>
	rf12_setpower(0, 6);			// 1mW Ausgangangsleistung, 120k
     10a:	66 e0       	ldi	r22, 0x06	; 6
     10c:	80 e0       	ldi	r24, 0x00	; 0
     10e:	0e 94 b4 01 	call	0x368	; 0x368 <rf12_setpower>
     112:	36 e7       	ldi	r19, 0x76	; 118
     114:	c3 2e       	mov	r12, r19
     116:	30 e0       	ldi	r19, 0x00	; 0
     118:	d3 2e       	mov	r13, r19
     11a:	0f 90       	pop	r0
     11c:	0f 90       	pop	r0
     11e:	2b e7       	ldi	r18, 0x7B	; 123
     120:	a2 2e       	mov	r10, r18
     122:	20 e0       	ldi	r18, 0x00	; 0
     124:	b2 2e       	mov	r11, r18
     126:	90 e8       	ldi	r25, 0x80	; 128
     128:	e9 2e       	mov	r14, r25
     12a:	90 e0       	ldi	r25, 0x00	; 0
     12c:	f9 2e       	mov	r15, r25
     12e:	83 e8       	ldi	r24, 0x83	; 131
     130:	88 2e       	mov	r8, r24
     132:	80 e0       	ldi	r24, 0x00	; 0
     134:	98 2e       	mov	r9, r24
     136:	8e 01       	movw	r16, r28
     138:	0f 5f       	subi	r16, 0xFF	; 255
     13a:	1f 4f       	sbci	r17, 0xFF	; 255


	/* Endlosschleife */
  while(1)
  { 
	
		/********** PC ***********/
		// senden
		rf12_txdata("ping",13);
     13c:	6d e0       	ldi	r22, 0x0D	; 13
     13e:	86 e7       	ldi	r24, 0x76	; 118
     140:	90 e0       	ldi	r25, 0x00	; 0
     142:	0e 94 f7 04 	call	0x9ee	; 0x9ee <rf12_txdata>
		usart_write("PC:\t");
     146:	bf 92       	push	r11
     148:	af 92       	push	r10
     14a:	0e 94 66 08 	call	0x10cc	; 0x10cc <usart_write>
		usart_write((char*)"ping");
     14e:	df 92       	push	r13
     150:	cf 92       	push	r12
     152:	0e 94 66 08 	call	0x10cc	; 0x10cc <usart_write>
		usart_write("\r\n");				
     156:	ff 92       	push	r15
     158:	ef 92       	push	r14
     15a:	0e 94 66 08 	call	0x10cc	; 0x10cc <usart_write>
		// Empfangen
		usart_write("Bot:\t");
     15e:	9f 92       	push	r9
     160:	8f 92       	push	r8
     162:	0e 94 66 08 	call	0x10cc	; 0x10cc <usart_write>
     166:	8d b7       	in	r24, 0x3d	; 61
     168:	9e b7       	in	r25, 0x3e	; 62
     16a:	08 96       	adiw	r24, 0x08	; 8
     16c:	0f b6       	in	r0, 0x3f	; 63
     16e:	f8 94       	cli
     170:	9e bf       	out	0x3e, r25	; 62
     172:	0f be       	out	0x3f, r0	; 63
     174:	8d bf       	out	0x3d, r24	; 61
		while(!(rf12_rxdata(test)));
     176:	c8 01       	movw	r24, r16
     178:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <rf12_rxdata>
     17c:	88 23       	and	r24, r24
     17e:	d9 f3       	breq	.-10     	; 0x176 <main+0xe4>
		// über Uart ausgeben		
		usart_write((char*)test);
     180:	1f 93       	push	r17
     182:	0f 93       	push	r16
     184:	0e 94 66 08 	call	0x10cc	; 0x10cc <usart_write>
		usart_write("\r\n");
     188:	ff 92       	push	r15
     18a:	ef 92       	push	r14
     18c:	0e 94 66 08 	call	0x10cc	; 0x10cc <usart_write>
     190:	80 e0       	ldi	r24, 0x00	; 0
     192:	90 e0       	ldi	r25, 0x00	; 0
     194:	a0 e0       	ldi	r26, 0x00	; 0
     196:	b0 e0       	ldi	r27, 0x00	; 0
     198:	0f 90       	pop	r0
     19a:	0f 90       	pop	r0
     19c:	0f 90       	pop	r0
     19e:	0f 90       	pop	r0
		
		// Pause
		for(long a = 0;a<1000000;a++){asm("nop");};
     1a0:	00 00       	nop
     1a2:	01 96       	adiw	r24, 0x01	; 1
     1a4:	a1 1d       	adc	r26, r1
     1a6:	b1 1d       	adc	r27, r1
     1a8:	80 34       	cpi	r24, 0x40	; 64
     1aa:	22 e4       	ldi	r18, 0x42	; 66
     1ac:	92 07       	cpc	r25, r18
     1ae:	2f e0       	ldi	r18, 0x0F	; 15
     1b0:	a2 07       	cpc	r26, r18
     1b2:	20 e0       	ldi	r18, 0x00	; 0
     1b4:	b2 07       	cpc	r27, r18
     1b6:	a1 f7       	brne	.-24     	; 0x1a0 <main+0x10e>
     1b8:	c1 cf       	rjmp	.-126    	; 0x13c <main+0xaa>

000001ba <crcUpdate>:
//##############################################################################
//
unsigned int crcUpdate(unsigned int crc, unsigned char serialData)
//##############################################################################
{
     1ba:	9c 01       	movw	r18, r24
        unsigned int tmp;
        unsigned char j;

	tmp = serialData << 8;
     1bc:	77 27       	eor	r23, r23
     1be:	76 2f       	mov	r23, r22
     1c0:	66 27       	eor	r22, r22
        for (j=0; j<8; j++)
	{
                if((crc^tmp) & 0x8000)
     1c2:	cb 01       	movw	r24, r22
     1c4:	82 27       	eor	r24, r18
     1c6:	93 27       	eor	r25, r19
     1c8:	97 fd       	sbrc	r25, 7
     1ca:	41 c0       	rjmp	.+130    	; 0x24e <crcUpdate+0x94>
			crc = (crc<<1) ^ 0x1021;
                else
			crc = crc << 1;
     1cc:	22 0f       	add	r18, r18
     1ce:	33 1f       	adc	r19, r19
                tmp = tmp << 1;
     1d0:	66 0f       	add	r22, r22
     1d2:	77 1f       	adc	r23, r23
     1d4:	c9 01       	movw	r24, r18
     1d6:	86 27       	eor	r24, r22
     1d8:	97 27       	eor	r25, r23
     1da:	97 fd       	sbrc	r25, 7
     1dc:	45 c0       	rjmp	.+138    	; 0x268 <crcUpdate+0xae>
     1de:	22 0f       	add	r18, r18
     1e0:	33 1f       	adc	r19, r19
     1e2:	66 0f       	add	r22, r22
     1e4:	77 1f       	adc	r23, r23
     1e6:	c9 01       	movw	r24, r18
     1e8:	86 27       	eor	r24, r22
     1ea:	97 27       	eor	r25, r23
     1ec:	97 fd       	sbrc	r25, 7
     1ee:	49 c0       	rjmp	.+146    	; 0x282 <crcUpdate+0xc8>
     1f0:	22 0f       	add	r18, r18
     1f2:	33 1f       	adc	r19, r19
     1f4:	66 0f       	add	r22, r22
     1f6:	77 1f       	adc	r23, r23
     1f8:	c9 01       	movw	r24, r18
     1fa:	86 27       	eor	r24, r22
     1fc:	97 27       	eor	r25, r23
     1fe:	97 fd       	sbrc	r25, 7
     200:	4d c0       	rjmp	.+154    	; 0x29c <crcUpdate+0xe2>
     202:	22 0f       	add	r18, r18
     204:	33 1f       	adc	r19, r19
     206:	66 0f       	add	r22, r22
     208:	77 1f       	adc	r23, r23
     20a:	c9 01       	movw	r24, r18
     20c:	86 27       	eor	r24, r22
     20e:	97 27       	eor	r25, r23
     210:	97 fd       	sbrc	r25, 7
     212:	51 c0       	rjmp	.+162    	; 0x2b6 <crcUpdate+0xfc>
     214:	22 0f       	add	r18, r18
     216:	33 1f       	adc	r19, r19
     218:	66 0f       	add	r22, r22
     21a:	77 1f       	adc	r23, r23
     21c:	c9 01       	movw	r24, r18
     21e:	86 27       	eor	r24, r22
     220:	97 27       	eor	r25, r23
     222:	97 fd       	sbrc	r25, 7
     224:	55 c0       	rjmp	.+170    	; 0x2d0 <crcUpdate+0x116>
     226:	22 0f       	add	r18, r18
     228:	33 1f       	adc	r19, r19
     22a:	66 0f       	add	r22, r22
     22c:	77 1f       	adc	r23, r23
     22e:	c9 01       	movw	r24, r18
     230:	86 27       	eor	r24, r22
     232:	97 27       	eor	r25, r23
     234:	97 fd       	sbrc	r25, 7
     236:	59 c0       	rjmp	.+178    	; 0x2ea <crcUpdate+0x130>
     238:	22 0f       	add	r18, r18
     23a:	33 1f       	adc	r19, r19
     23c:	66 0f       	add	r22, r22
     23e:	77 1f       	adc	r23, r23
     240:	62 27       	eor	r22, r18
     242:	73 27       	eor	r23, r19
     244:	77 fd       	sbrc	r23, 7
     246:	5d c0       	rjmp	.+186    	; 0x302 <crcUpdate+0x148>
     248:	22 0f       	add	r18, r18
     24a:	33 1f       	adc	r19, r19
     24c:	60 c0       	rjmp	.+192    	; 0x30e <crcUpdate+0x154>
     24e:	22 0f       	add	r18, r18
     250:	33 1f       	adc	r19, r19
     252:	81 e2       	ldi	r24, 0x21	; 33
     254:	90 e1       	ldi	r25, 0x10	; 16
     256:	28 27       	eor	r18, r24
     258:	39 27       	eor	r19, r25
     25a:	66 0f       	add	r22, r22
     25c:	77 1f       	adc	r23, r23
     25e:	c9 01       	movw	r24, r18
     260:	86 27       	eor	r24, r22
     262:	97 27       	eor	r25, r23
     264:	97 ff       	sbrs	r25, 7
     266:	bb cf       	rjmp	.-138    	; 0x1de <crcUpdate+0x24>
     268:	22 0f       	add	r18, r18
     26a:	33 1f       	adc	r19, r19
     26c:	81 e2       	ldi	r24, 0x21	; 33
     26e:	90 e1       	ldi	r25, 0x10	; 16
     270:	28 27       	eor	r18, r24
     272:	39 27       	eor	r19, r25
     274:	66 0f       	add	r22, r22
     276:	77 1f       	adc	r23, r23
     278:	c9 01       	movw	r24, r18
     27a:	86 27       	eor	r24, r22
     27c:	97 27       	eor	r25, r23
     27e:	97 ff       	sbrs	r25, 7
     280:	b7 cf       	rjmp	.-146    	; 0x1f0 <crcUpdate+0x36>
     282:	22 0f       	add	r18, r18
     284:	33 1f       	adc	r19, r19
     286:	81 e2       	ldi	r24, 0x21	; 33
     288:	90 e1       	ldi	r25, 0x10	; 16
     28a:	28 27       	eor	r18, r24
     28c:	39 27       	eor	r19, r25
     28e:	66 0f       	add	r22, r22
     290:	77 1f       	adc	r23, r23
     292:	c9 01       	movw	r24, r18
     294:	86 27       	eor	r24, r22
     296:	97 27       	eor	r25, r23
     298:	97 ff       	sbrs	r25, 7
     29a:	b3 cf       	rjmp	.-154    	; 0x202 <crcUpdate+0x48>
     29c:	22 0f       	add	r18, r18
     29e:	33 1f       	adc	r19, r19
     2a0:	81 e2       	ldi	r24, 0x21	; 33
     2a2:	90 e1       	ldi	r25, 0x10	; 16
     2a4:	28 27       	eor	r18, r24
     2a6:	39 27       	eor	r19, r25
     2a8:	66 0f       	add	r22, r22
     2aa:	77 1f       	adc	r23, r23
     2ac:	c9 01       	movw	r24, r18
     2ae:	86 27       	eor	r24, r22
     2b0:	97 27       	eor	r25, r23
     2b2:	97 ff       	sbrs	r25, 7
     2b4:	af cf       	rjmp	.-162    	; 0x214 <crcUpdate+0x5a>
     2b6:	22 0f       	add	r18, r18
     2b8:	33 1f       	adc	r19, r19
     2ba:	81 e2       	ldi	r24, 0x21	; 33
     2bc:	90 e1       	ldi	r25, 0x10	; 16
     2be:	28 27       	eor	r18, r24
     2c0:	39 27       	eor	r19, r25
     2c2:	66 0f       	add	r22, r22
     2c4:	77 1f       	adc	r23, r23
     2c6:	c9 01       	movw	r24, r18
     2c8:	86 27       	eor	r24, r22
     2ca:	97 27       	eor	r25, r23
     2cc:	97 ff       	sbrs	r25, 7
     2ce:	ab cf       	rjmp	.-170    	; 0x226 <crcUpdate+0x6c>
     2d0:	22 0f       	add	r18, r18
     2d2:	33 1f       	adc	r19, r19
     2d4:	81 e2       	ldi	r24, 0x21	; 33
     2d6:	90 e1       	ldi	r25, 0x10	; 16
     2d8:	28 27       	eor	r18, r24
     2da:	39 27       	eor	r19, r25
     2dc:	66 0f       	add	r22, r22
     2de:	77 1f       	adc	r23, r23
     2e0:	c9 01       	movw	r24, r18
     2e2:	86 27       	eor	r24, r22
     2e4:	97 27       	eor	r25, r23
     2e6:	97 ff       	sbrs	r25, 7
     2e8:	a7 cf       	rjmp	.-178    	; 0x238 <crcUpdate+0x7e>
     2ea:	22 0f       	add	r18, r18
     2ec:	33 1f       	adc	r19, r19
     2ee:	81 e2       	ldi	r24, 0x21	; 33
     2f0:	90 e1       	ldi	r25, 0x10	; 16
     2f2:	28 27       	eor	r18, r24
     2f4:	39 27       	eor	r19, r25
     2f6:	66 0f       	add	r22, r22
     2f8:	77 1f       	adc	r23, r23
     2fa:	62 27       	eor	r22, r18
     2fc:	73 27       	eor	r23, r19
     2fe:	77 ff       	sbrs	r23, 7
     300:	a3 cf       	rjmp	.-186    	; 0x248 <crcUpdate+0x8e>
     302:	22 0f       	add	r18, r18
     304:	33 1f       	adc	r19, r19
     306:	81 e2       	ldi	r24, 0x21	; 33
     308:	90 e1       	ldi	r25, 0x10	; 16
     30a:	28 27       	eor	r18, r24
     30c:	39 27       	eor	r19, r25
        }
	return crc;
}
     30e:	c9 01       	movw	r24, r18
     310:	08 95       	ret

00000312 <rf12_trans>:

//##############################################################################
//
unsigned short rf12_trans(unsigned short wert)
//##############################################################################
{	
     312:	9c 01       	movw	r18, r24
	unsigned short werti = 0;
	
	RF_PORT &=~(1<<CS);
     314:	c4 98       	cbi	0x18, 4	; 24
	
#ifdef SPI_MODE	//Routine für Hardware SPI
	SPDR = (0xFF00 & wert)>>8;
     316:	89 2f       	mov	r24, r25
     318:	99 27       	eor	r25, r25
     31a:	8f b9       	out	0x0f, r24	; 15
	while(!(SPSR & (1<<SPIF))){};
     31c:	77 9b       	sbis	0x0e, 7	; 14
     31e:	fe cf       	rjmp	.-4      	; 0x31c <rf12_trans+0xa>
	werti = (SPDR<<8);
     320:	8f b1       	in	r24, 0x0f	; 15
	
	SPDR = (0x00ff & wert);
     322:	2f b9       	out	0x0f, r18	; 15
	while(!(SPSR & (1<<SPIF))){};
     324:	77 9b       	sbis	0x0e, 7	; 14
     326:	fe cf       	rjmp	.-4      	; 0x324 <rf12_trans+0x12>
	werti = werti + SPDR;
     328:	2f b1       	in	r18, 0x0f	; 15
     32a:	99 27       	eor	r25, r25
     32c:	98 2f       	mov	r25, r24
     32e:	88 27       	eor	r24, r24

#else			//Routine für Software SPI
	for (unsigned char i=0; i<16; i++)
	{	
		if (wert&32768)
			RF_PORT |=(1<<SDI);
		else
			RF_PORT &=~(1<<SDI);
		werti<<=1;
		if (RF_PIN&(1<<SDO))
			werti|=1;
		RF_PORT |=(1<<SCK);
		wert<<=1;
		asm("nop");
		RF_PORT &=~(1<<SCK);
	}
#endif
	RF_PORT |=(1<<CS);
     330:	c4 9a       	sbi	0x18, 4	; 24
	return werti;
}
     332:	82 0f       	add	r24, r18
     334:	91 1d       	adc	r25, r1
     336:	08 95       	ret

00000338 <rf12_ready>:

//##############################################################################
//
void rf12_init(void)
//##############################################################################
{
	unsigned char i;

	RF_DDR |= (1<<SDI)|(1<<SCK)|(1<<CS);
	RF_DDR &= ~(1<<SDO);
	RF_PORT |= (1<<CS);

#ifdef SPI_MODE
	//Aktiviren des SPI - Bus, Clock = Idel LOW
	//SPI Clock teilen durch 128, Enable SPI, SPI in Master Mode
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0)|(1<<SPR1);
	SPSR &= ~(0<<SPI2X);
#endif

	for (i=0; i<10; i++)
		_delay_ms(10);			// wait until POR done

	rf12_trans(0xC0E0);			// AVR CLK: 10MHz
	rf12_trans(0x80D7);			// Enable FIFO
	rf12_trans(0xC2AB);			// Data Filter: internal
	rf12_trans(0xCA81);			// Set FIFO mode
	rf12_trans(0xE000);			// disable wakeuptimer
	rf12_trans(0xC800);			// disable low duty cycle
	rf12_trans(0xC4F7);			// AFC settings: autotuning: -10kHz...+7,5kHz
	rf12_trans(0x0000);
		
#ifdef RF12_INTERRUPT
	RF12_status.Rx = 0;
	RF12_status.Tx = 0;
	RF12_status.New = 0;

	RF_IRQDDR &= ~(1<<IRQ);
	GICR |= (1<<INT0);
#endif
}

//##############################################################################
//
void rf12_setbandwidth(unsigned char bandwidth, unsigned char gain, 
						unsigned char drssi)
//##############################################################################
{
	rf12_trans(0x9400|((bandwidth&7)<<5)|((gain&3)<<3)|(drssi&7));
}

//##############################################################################
//
void rf12_setfreq(unsigned short freq)
//##############################################################################
{	
	if (freq<96)					// 430,2400MHz
		freq=96;
	else if (freq>3903)			// 439,7575MHz
		freq=3903;
	rf12_trans(0xA000|freq);
}

//##############################################################################
//
void rf12_setbaud(unsigned short baud)
//##############################################################################
{
	if (baud<663)
		return;
	if (baud<5400)					// Baudrate= 344827,58621/(R+1)/(1+CS*7)
		rf12_trans(0xC680|((43104/baud)-1));
	else
		rf12_trans(0xC600|((344828UL/baud)-1));
}

//##############################################################################
//
void rf12_setpower(unsigned char power, unsigned char mod)
//##############################################################################
{	
	rf12_trans(0x9800|(power&7)|((mod&15)<<4));
}

//##############################################################################
//
#ifdef RF12_INTERRUPT
unsigned char rf12_rxstart(void)
//##############################################################################
{
	if(RF12_status.New)
		return(1);			//buffer not yet empty
	if(RF12_status.Tx)
		return(2);			//tx in action
	if(RF12_status.Rx)
		return(3);			//rx already in action

	rf12_trans(0x82C8);			// RX on
	rf12_trans(0xCA81);			// set FIFO mode
	rf12_trans(0xCA83);			// enable FIFO

	RF12_Index = 0;
	RF12_status.Rx = 1;
	
	return(0);				//all went fine
}

//##############################################################################
//
unsigned char rf12_rxfinish(unsigned char *data)
//##############################################################################
{
	unsigned int crc, crc_chk = 0;
	unsigned char i;
	if(RF12_status.Rx)
		return(255);				//not finished yet
	if(!RF12_status.New)
		return(254);				//old buffer
	for(i=0; i<RF12_Data[0] +1 ; i++)
		crc_chk = crcUpdate(crc_chk, RF12_Data[i]);

	crc = RF12_Data[i++];
	crc |= RF12_Data[i] << 8;
	RF12_status.New = 0;
	if(crc != crc_chk)
		return(0);				//crc err -or- strsize
	else
	{
		unsigned char i;
		for(i=0; i<RF12_Data[0]; i++)
			data[i] = RF12_Data[i+1];
		return(RF12_Data[0]);			//strsize
	}
}

//##############################################################################
//
unsigned char rf12_txstart(unsigned char *data, unsigned char size)
//##############################################################################
{
	unsigned char i, l;
	unsigned int crc;
	if(RF12_status.Tx)
		return(2);			//tx in action
	if(RF12_status.Rx)
		return(3);			//rx already in action
	if(size > RF12_DataLength)
		return(4);			//str to big to transmit

	RF12_status.Tx = 1;
	RF12_Index = size + 9;			//act -10 

	i = RF12_Index;				
	RF12_Data[i--] = 0xAA;
	RF12_Data[i--] = 0xAA;
	RF12_Data[i--] = 0xAA;
	RF12_Data[i--] = 0x2D;
	RF12_Data[i--] = 0xD4;
	RF12_Data[i--] = size;
	crc = crcUpdate(0, size);
	for(l=0; l<size; l++)
	{
		RF12_Data[i--] = data[l];
		crc = crcUpdate(crc, data[l]);
	}	
	RF12_Data[i--] = (crc & 0x00FF);
	RF12_Data[i--] = (crc >> 8);
	RF12_Data[i--] = 0xAA;
	RF12_Data[i--] = 0xAA;

	rf12_trans(0x8238);			// TX on

	return(0);				//all went fine
}

//##############################################################################
//
unsigned char rf12_txfinished(void)
//##############################################################################
{
	if(RF12_status.Tx)
		return(255);			//not yet finished
	return(0);
}

//##############################################################################
//
void rf12_allstop(void)
//##############################################################################
{
	//GICR &= ~(1<<INT0);		//disable int0	
	RF12_status.Rx = 0;
	RF12_status.Tx = 0;
	RF12_status.New = 0;
	rf12_trans(0x8208);		//shutdown all
	rf12_trans(0x0000);		//dummy read
}

//##############################################################################
//
#else

void rf12_ready(void)
//##############################################################################
{
     338:	c4 98       	cbi	0x18, 4	; 24
	unsigned long timeout = 0;
	RF_PORT &=~(1<<CS);
	asm("nop");
     33a:	00 00       	nop
	asm("nop");
     33c:	00 00       	nop
	asm("nop");
     33e:	00 00       	nop
     340:	80 e0       	ldi	r24, 0x00	; 0
     342:	90 e0       	ldi	r25, 0x00	; 0
     344:	a0 e0       	ldi	r26, 0x00	; 0
     346:	b0 e0       	ldi	r27, 0x00	; 0
     348:	0b c0       	rjmp	.+22     	; 0x360 <rf12_ready+0x28>
	//wait until FIFO ready or timeout
	while (!(RF_PIN & (1<<SDO)))
	{
		if ((timeout++)>100000){break;};
     34a:	81 3a       	cpi	r24, 0xA1	; 161
     34c:	26 e8       	ldi	r18, 0x86	; 134
     34e:	92 07       	cpc	r25, r18
     350:	21 e0       	ldi	r18, 0x01	; 1
     352:	a2 07       	cpc	r26, r18
     354:	20 e0       	ldi	r18, 0x00	; 0
     356:	b2 07       	cpc	r27, r18
     358:	29 f0       	breq	.+10     	; 0x364 <rf12_ready+0x2c>
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	a1 1d       	adc	r26, r1
     35e:	b1 1d       	adc	r27, r1
     360:	b6 9b       	sbis	0x16, 6	; 22
     362:	f3 cf       	rjmp	.-26     	; 0x34a <rf12_ready+0x12>
	};
	RF_PORT |=(1<<CS);
     364:	c4 9a       	sbi	0x18, 4	; 24
     366:	08 95       	ret

00000368 <rf12_setpower>:
     368:	77 27       	eor	r23, r23
     36a:	6f 70       	andi	r22, 0x0F	; 15
     36c:	70 70       	andi	r23, 0x00	; 0
     36e:	62 95       	swap	r22
     370:	72 95       	swap	r23
     372:	70 7f       	andi	r23, 0xF0	; 240
     374:	76 27       	eor	r23, r22
     376:	60 7f       	andi	r22, 0xF0	; 240
     378:	76 27       	eor	r23, r22
     37a:	99 27       	eor	r25, r25
     37c:	87 70       	andi	r24, 0x07	; 7
     37e:	90 70       	andi	r25, 0x00	; 0
     380:	98 69       	ori	r25, 0x98	; 152
     382:	68 2b       	or	r22, r24
     384:	79 2b       	or	r23, r25
     386:	c4 98       	cbi	0x18, 4	; 24
     388:	87 2f       	mov	r24, r23
     38a:	99 27       	eor	r25, r25
     38c:	8f b9       	out	0x0f, r24	; 15
     38e:	77 9b       	sbis	0x0e, 7	; 14
     390:	fe cf       	rjmp	.-4      	; 0x38e <rf12_setpower+0x26>
     392:	8f b1       	in	r24, 0x0f	; 15
     394:	6f b9       	out	0x0f, r22	; 15
     396:	77 9b       	sbis	0x0e, 7	; 14
     398:	fe cf       	rjmp	.-4      	; 0x396 <rf12_setpower+0x2e>
     39a:	8f b1       	in	r24, 0x0f	; 15
     39c:	c4 9a       	sbi	0x18, 4	; 24
     39e:	08 95       	ret

000003a0 <rf12_setbaud>:
     3a0:	22 e0       	ldi	r18, 0x02	; 2
     3a2:	87 39       	cpi	r24, 0x97	; 151
     3a4:	92 07       	cpc	r25, r18
     3a6:	e0 f0       	brcs	.+56     	; 0x3e0 <rf12_setbaud+0x40>
     3a8:	25 e1       	ldi	r18, 0x15	; 21
     3aa:	88 31       	cpi	r24, 0x18	; 24
     3ac:	92 07       	cpc	r25, r18
     3ae:	c8 f0       	brcs	.+50     	; 0x3e2 <rf12_setbaud+0x42>
     3b0:	9c 01       	movw	r18, r24
     3b2:	44 27       	eor	r20, r20
     3b4:	55 27       	eor	r21, r21
     3b6:	6c ef       	ldi	r22, 0xFC	; 252
     3b8:	72 e4       	ldi	r23, 0x42	; 66
     3ba:	85 e0       	ldi	r24, 0x05	; 5
     3bc:	90 e0       	ldi	r25, 0x00	; 0
     3be:	0e 94 aa 09 	call	0x1354	; 0x1354 <__udivmodsi4>
     3c2:	21 50       	subi	r18, 0x01	; 1
     3c4:	30 40       	sbci	r19, 0x00	; 0
     3c6:	36 6c       	ori	r19, 0xC6	; 198
     3c8:	c4 98       	cbi	0x18, 4	; 24
     3ca:	83 2f       	mov	r24, r19
     3cc:	99 27       	eor	r25, r25
     3ce:	8f b9       	out	0x0f, r24	; 15
     3d0:	77 9b       	sbis	0x0e, 7	; 14
     3d2:	fe cf       	rjmp	.-4      	; 0x3d0 <rf12_setbaud+0x30>
     3d4:	8f b1       	in	r24, 0x0f	; 15
     3d6:	2f b9       	out	0x0f, r18	; 15
     3d8:	77 9b       	sbis	0x0e, 7	; 14
     3da:	fe cf       	rjmp	.-4      	; 0x3d8 <rf12_setbaud+0x38>
     3dc:	8f b1       	in	r24, 0x0f	; 15
     3de:	c4 9a       	sbi	0x18, 4	; 24
     3e0:	08 95       	ret
     3e2:	9c 01       	movw	r18, r24
     3e4:	44 27       	eor	r20, r20
     3e6:	55 27       	eor	r21, r21
     3e8:	60 e6       	ldi	r22, 0x60	; 96
     3ea:	78 ea       	ldi	r23, 0xA8	; 168
     3ec:	80 e0       	ldi	r24, 0x00	; 0
     3ee:	90 e0       	ldi	r25, 0x00	; 0
     3f0:	0e 94 cc 09 	call	0x1398	; 0x1398 <__divmodsi4>
     3f4:	21 50       	subi	r18, 0x01	; 1
     3f6:	30 40       	sbci	r19, 0x00	; 0
     3f8:	20 68       	ori	r18, 0x80	; 128
     3fa:	36 6c       	ori	r19, 0xC6	; 198
     3fc:	c4 98       	cbi	0x18, 4	; 24
     3fe:	83 2f       	mov	r24, r19
     400:	99 27       	eor	r25, r25
     402:	8f b9       	out	0x0f, r24	; 15
     404:	77 9b       	sbis	0x0e, 7	; 14
     406:	fe cf       	rjmp	.-4      	; 0x404 <rf12_setbaud+0x64>
     408:	8f b1       	in	r24, 0x0f	; 15
     40a:	2f b9       	out	0x0f, r18	; 15
     40c:	77 9b       	sbis	0x0e, 7	; 14
     40e:	fe cf       	rjmp	.-4      	; 0x40c <rf12_setbaud+0x6c>
     410:	8f b1       	in	r24, 0x0f	; 15
     412:	c4 9a       	sbi	0x18, 4	; 24
     414:	08 95       	ret

00000416 <rf12_setfreq>:
     416:	80 36       	cpi	r24, 0x60	; 96
     418:	91 05       	cpc	r25, r1
     41a:	60 f4       	brcc	.+24     	; 0x434 <rf12_setfreq+0x1e>
     41c:	20 e6       	ldi	r18, 0x60	; 96
     41e:	30 ea       	ldi	r19, 0xA0	; 160
     420:	80 ea       	ldi	r24, 0xA0	; 160
     422:	c4 98       	cbi	0x18, 4	; 24
     424:	8f b9       	out	0x0f, r24	; 15
     426:	77 9b       	sbis	0x0e, 7	; 14
     428:	fe cf       	rjmp	.-4      	; 0x426 <rf12_setfreq+0x10>
     42a:	8f b1       	in	r24, 0x0f	; 15
     42c:	2f b9       	out	0x0f, r18	; 15
     42e:	77 9b       	sbis	0x0e, 7	; 14
     430:	fe cf       	rjmp	.-4      	; 0x42e <rf12_setfreq+0x18>
     432:	10 c0       	rjmp	.+32     	; 0x454 <rf12_setfreq+0x3e>
     434:	2f e0       	ldi	r18, 0x0F	; 15
     436:	80 34       	cpi	r24, 0x40	; 64
     438:	92 07       	cpc	r25, r18
     43a:	28 f4       	brcc	.+10     	; 0x446 <rf12_setfreq+0x30>
     43c:	9c 01       	movw	r18, r24
     43e:	30 6a       	ori	r19, 0xA0	; 160
     440:	83 2f       	mov	r24, r19
     442:	99 27       	eor	r25, r25
     444:	ee cf       	rjmp	.-36     	; 0x422 <rf12_setfreq+0xc>
     446:	8f e3       	ldi	r24, 0x3F	; 63
     448:	9f e0       	ldi	r25, 0x0F	; 15
     44a:	9c 01       	movw	r18, r24
     44c:	30 6a       	ori	r19, 0xA0	; 160
     44e:	83 2f       	mov	r24, r19
     450:	99 27       	eor	r25, r25
     452:	e7 cf       	rjmp	.-50     	; 0x422 <rf12_setfreq+0xc>
     454:	8f b1       	in	r24, 0x0f	; 15
     456:	c4 9a       	sbi	0x18, 4	; 24
     458:	08 95       	ret

0000045a <rf12_setbandwidth>:
     45a:	28 2f       	mov	r18, r24
     45c:	33 27       	eor	r19, r19
     45e:	27 70       	andi	r18, 0x07	; 7
     460:	30 70       	andi	r19, 0x00	; 0
     462:	22 0f       	add	r18, r18
     464:	33 1f       	adc	r19, r19
     466:	22 95       	swap	r18
     468:	32 95       	swap	r19
     46a:	30 7f       	andi	r19, 0xF0	; 240
     46c:	32 27       	eor	r19, r18
     46e:	20 7f       	andi	r18, 0xF0	; 240
     470:	32 27       	eor	r19, r18
     472:	55 27       	eor	r21, r21
     474:	47 70       	andi	r20, 0x07	; 7
     476:	50 70       	andi	r21, 0x00	; 0
     478:	24 2b       	or	r18, r20
     47a:	35 2b       	or	r19, r21
     47c:	77 27       	eor	r23, r23
     47e:	63 70       	andi	r22, 0x03	; 3
     480:	70 70       	andi	r23, 0x00	; 0
     482:	66 0f       	add	r22, r22
     484:	77 1f       	adc	r23, r23
     486:	66 0f       	add	r22, r22
     488:	77 1f       	adc	r23, r23
     48a:	66 0f       	add	r22, r22
     48c:	77 1f       	adc	r23, r23
     48e:	74 69       	ori	r23, 0x94	; 148
     490:	26 2b       	or	r18, r22
     492:	37 2b       	or	r19, r23
     494:	c4 98       	cbi	0x18, 4	; 24
     496:	83 2f       	mov	r24, r19
     498:	99 27       	eor	r25, r25
     49a:	8f b9       	out	0x0f, r24	; 15
     49c:	77 9b       	sbis	0x0e, 7	; 14
     49e:	fe cf       	rjmp	.-4      	; 0x49c <__stack+0x3d>
     4a0:	8f b1       	in	r24, 0x0f	; 15
     4a2:	2f b9       	out	0x0f, r18	; 15
     4a4:	77 9b       	sbis	0x0e, 7	; 14
     4a6:	fe cf       	rjmp	.-4      	; 0x4a4 <__stack+0x45>
     4a8:	8f b1       	in	r24, 0x0f	; 15
     4aa:	c4 9a       	sbi	0x18, 4	; 24
     4ac:	08 95       	ret

000004ae <rf12_init>:
     4ae:	87 b3       	in	r24, 0x17	; 23
     4b0:	80 6b       	ori	r24, 0xB0	; 176
     4b2:	87 bb       	out	0x17, r24	; 23
     4b4:	be 98       	cbi	0x17, 6	; 23
     4b6:	c4 9a       	sbi	0x18, 4	; 24
     4b8:	83 e5       	ldi	r24, 0x53	; 83
     4ba:	8d b9       	out	0x0d, r24	; 13
     4bc:	8e b1       	in	r24, 0x0e	; 14
     4be:	8e b9       	out	0x0e, r24	; 14
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     4c0:	8f ef       	ldi	r24, 0xFF	; 255
     4c2:	9b e6       	ldi	r25, 0x6B	; 107
     4c4:	fc 01       	movw	r30, r24
     4c6:	31 97       	sbiw	r30, 0x01	; 1
     4c8:	f1 f7       	brne	.-4      	; 0x4c6 <rf12_init+0x18>
     4ca:	fc 01       	movw	r30, r24
     4cc:	31 97       	sbiw	r30, 0x01	; 1
     4ce:	f1 f7       	brne	.-4      	; 0x4cc <rf12_init+0x1e>
     4d0:	fc 01       	movw	r30, r24
     4d2:	31 97       	sbiw	r30, 0x01	; 1
     4d4:	f1 f7       	brne	.-4      	; 0x4d2 <rf12_init+0x24>
     4d6:	fc 01       	movw	r30, r24
     4d8:	31 97       	sbiw	r30, 0x01	; 1
     4da:	f1 f7       	brne	.-4      	; 0x4d8 <rf12_init+0x2a>
     4dc:	fc 01       	movw	r30, r24
     4de:	31 97       	sbiw	r30, 0x01	; 1
     4e0:	f1 f7       	brne	.-4      	; 0x4de <rf12_init+0x30>
     4e2:	fc 01       	movw	r30, r24
     4e4:	31 97       	sbiw	r30, 0x01	; 1
     4e6:	f1 f7       	brne	.-4      	; 0x4e4 <rf12_init+0x36>
     4e8:	fc 01       	movw	r30, r24
     4ea:	31 97       	sbiw	r30, 0x01	; 1
     4ec:	f1 f7       	brne	.-4      	; 0x4ea <rf12_init+0x3c>
     4ee:	fc 01       	movw	r30, r24
     4f0:	31 97       	sbiw	r30, 0x01	; 1
     4f2:	f1 f7       	brne	.-4      	; 0x4f0 <rf12_init+0x42>
     4f4:	fc 01       	movw	r30, r24
     4f6:	31 97       	sbiw	r30, 0x01	; 1
     4f8:	f1 f7       	brne	.-4      	; 0x4f6 <rf12_init+0x48>
     4fa:	01 97       	sbiw	r24, 0x01	; 1
     4fc:	f1 f7       	brne	.-4      	; 0x4fa <rf12_init+0x4c>
     4fe:	c4 98       	cbi	0x18, 4	; 24
     500:	80 ec       	ldi	r24, 0xC0	; 192
     502:	8f b9       	out	0x0f, r24	; 15
     504:	77 9b       	sbis	0x0e, 7	; 14
     506:	fe cf       	rjmp	.-4      	; 0x504 <rf12_init+0x56>
     508:	8f b1       	in	r24, 0x0f	; 15
     50a:	80 ee       	ldi	r24, 0xE0	; 224
     50c:	8f b9       	out	0x0f, r24	; 15
     50e:	77 9b       	sbis	0x0e, 7	; 14
     510:	fe cf       	rjmp	.-4      	; 0x50e <rf12_init+0x60>
     512:	8f b1       	in	r24, 0x0f	; 15
     514:	c4 9a       	sbi	0x18, 4	; 24
     516:	c4 98       	cbi	0x18, 4	; 24
     518:	80 e8       	ldi	r24, 0x80	; 128
     51a:	8f b9       	out	0x0f, r24	; 15
     51c:	77 9b       	sbis	0x0e, 7	; 14
     51e:	fe cf       	rjmp	.-4      	; 0x51c <rf12_init+0x6e>
     520:	8f b1       	in	r24, 0x0f	; 15
     522:	87 ed       	ldi	r24, 0xD7	; 215
     524:	8f b9       	out	0x0f, r24	; 15
     526:	77 9b       	sbis	0x0e, 7	; 14
     528:	fe cf       	rjmp	.-4      	; 0x526 <rf12_init+0x78>
     52a:	8f b1       	in	r24, 0x0f	; 15
     52c:	c4 9a       	sbi	0x18, 4	; 24
     52e:	c4 98       	cbi	0x18, 4	; 24
     530:	82 ec       	ldi	r24, 0xC2	; 194
     532:	8f b9       	out	0x0f, r24	; 15
     534:	77 9b       	sbis	0x0e, 7	; 14
     536:	fe cf       	rjmp	.-4      	; 0x534 <rf12_init+0x86>
     538:	8f b1       	in	r24, 0x0f	; 15
     53a:	8b ea       	ldi	r24, 0xAB	; 171
     53c:	8f b9       	out	0x0f, r24	; 15
     53e:	77 9b       	sbis	0x0e, 7	; 14
     540:	fe cf       	rjmp	.-4      	; 0x53e <rf12_init+0x90>
     542:	8f b1       	in	r24, 0x0f	; 15
     544:	c4 9a       	sbi	0x18, 4	; 24
     546:	c4 98       	cbi	0x18, 4	; 24
     548:	8a ec       	ldi	r24, 0xCA	; 202
     54a:	8f b9       	out	0x0f, r24	; 15
     54c:	77 9b       	sbis	0x0e, 7	; 14
     54e:	fe cf       	rjmp	.-4      	; 0x54c <rf12_init+0x9e>
     550:	8f b1       	in	r24, 0x0f	; 15
     552:	81 e8       	ldi	r24, 0x81	; 129
     554:	8f b9       	out	0x0f, r24	; 15
     556:	77 9b       	sbis	0x0e, 7	; 14
     558:	fe cf       	rjmp	.-4      	; 0x556 <rf12_init+0xa8>
     55a:	8f b1       	in	r24, 0x0f	; 15
     55c:	c4 9a       	sbi	0x18, 4	; 24
     55e:	c4 98       	cbi	0x18, 4	; 24
     560:	80 ee       	ldi	r24, 0xE0	; 224
     562:	8f b9       	out	0x0f, r24	; 15
     564:	77 9b       	sbis	0x0e, 7	; 14
     566:	fe cf       	rjmp	.-4      	; 0x564 <rf12_init+0xb6>
     568:	8f b1       	in	r24, 0x0f	; 15
     56a:	1f b8       	out	0x0f, r1	; 15
     56c:	77 9b       	sbis	0x0e, 7	; 14
     56e:	fe cf       	rjmp	.-4      	; 0x56c <rf12_init+0xbe>
     570:	8f b1       	in	r24, 0x0f	; 15
     572:	c4 9a       	sbi	0x18, 4	; 24
     574:	c4 98       	cbi	0x18, 4	; 24
     576:	88 ec       	ldi	r24, 0xC8	; 200
     578:	8f b9       	out	0x0f, r24	; 15
     57a:	77 9b       	sbis	0x0e, 7	; 14
     57c:	fe cf       	rjmp	.-4      	; 0x57a <rf12_init+0xcc>
     57e:	8f b1       	in	r24, 0x0f	; 15
     580:	1f b8       	out	0x0f, r1	; 15
     582:	77 9b       	sbis	0x0e, 7	; 14
     584:	fe cf       	rjmp	.-4      	; 0x582 <rf12_init+0xd4>
     586:	8f b1       	in	r24, 0x0f	; 15
     588:	c4 9a       	sbi	0x18, 4	; 24
     58a:	c4 98       	cbi	0x18, 4	; 24
     58c:	84 ec       	ldi	r24, 0xC4	; 196
     58e:	8f b9       	out	0x0f, r24	; 15
     590:	77 9b       	sbis	0x0e, 7	; 14
     592:	fe cf       	rjmp	.-4      	; 0x590 <rf12_init+0xe2>
     594:	8f b1       	in	r24, 0x0f	; 15
     596:	87 ef       	ldi	r24, 0xF7	; 247
     598:	8f b9       	out	0x0f, r24	; 15
     59a:	77 9b       	sbis	0x0e, 7	; 14
     59c:	fe cf       	rjmp	.-4      	; 0x59a <rf12_init+0xec>
     59e:	8f b1       	in	r24, 0x0f	; 15
     5a0:	c4 9a       	sbi	0x18, 4	; 24
     5a2:	c4 98       	cbi	0x18, 4	; 24
     5a4:	1f b8       	out	0x0f, r1	; 15
     5a6:	77 9b       	sbis	0x0e, 7	; 14
     5a8:	fe cf       	rjmp	.-4      	; 0x5a6 <rf12_init+0xf8>
     5aa:	8f b1       	in	r24, 0x0f	; 15
     5ac:	1f b8       	out	0x0f, r1	; 15
     5ae:	77 9b       	sbis	0x0e, 7	; 14
     5b0:	fe cf       	rjmp	.-4      	; 0x5ae <rf12_init+0x100>
     5b2:	8f b1       	in	r24, 0x0f	; 15
     5b4:	c4 9a       	sbi	0x18, 4	; 24
     5b6:	08 95       	ret

000005b8 <rf12_rxdata>:
}

//##############################################################################
//
void rf12_txdata(unsigned char *data, unsigned char number)
//##############################################################################
{	
	unsigned char i;
	unsigned int crc;
	rf12_trans(0x8238);			// TX on

	rf12_ready();
	rf12_trans(0xB8AA);
	rf12_ready();
	rf12_trans(0xB8AA);
	rf12_ready();
	rf12_trans(0xB8AA);
	rf12_ready();
	rf12_trans(0xB82D);
	rf12_ready();
	rf12_trans(0xB8D4);
	rf12_ready();
	rf12_trans(0xB800 | number);	
	crc = crcUpdate(0, number);
	for (i=0; i<number; i++)
	{	
		rf12_ready();
		rf12_trans(0xB800 | data[i]);
		crc = crcUpdate(crc, data[i]);
	}
	rf12_ready();
	rf12_trans(0xB800 | (crc & 0x00FF));
	rf12_ready();
	rf12_trans(0xB800 | (crc >> 8));
	rf12_ready();
	rf12_trans(0xB8AA);
	rf12_ready();
	rf12_trans(0xB8AA);
	rf12_ready();

	rf12_trans(0x8208);			// TX off
}

//##############################################################################
//
unsigned char rf12_rxdata(unsigned char *data)
//##############################################################################
{	
     5b8:	ef 92       	push	r14
     5ba:	ff 92       	push	r15
     5bc:	0f 93       	push	r16
     5be:	1f 93       	push	r17
     5c0:	cf 93       	push	r28
     5c2:	df 93       	push	r29
     5c4:	ec 01       	movw	r28, r24
     5c6:	c4 98       	cbi	0x18, 4	; 24
     5c8:	82 e8       	ldi	r24, 0x82	; 130
     5ca:	8f b9       	out	0x0f, r24	; 15
     5cc:	77 9b       	sbis	0x0e, 7	; 14
     5ce:	fe cf       	rjmp	.-4      	; 0x5cc <rf12_rxdata+0x14>
     5d0:	8f b1       	in	r24, 0x0f	; 15
     5d2:	88 ec       	ldi	r24, 0xC8	; 200
     5d4:	8f b9       	out	0x0f, r24	; 15
     5d6:	77 9b       	sbis	0x0e, 7	; 14
     5d8:	fe cf       	rjmp	.-4      	; 0x5d6 <rf12_rxdata+0x1e>
     5da:	8f b1       	in	r24, 0x0f	; 15
     5dc:	c4 9a       	sbi	0x18, 4	; 24
     5de:	c4 98       	cbi	0x18, 4	; 24
     5e0:	8a ec       	ldi	r24, 0xCA	; 202
     5e2:	8f b9       	out	0x0f, r24	; 15
     5e4:	77 9b       	sbis	0x0e, 7	; 14
     5e6:	fe cf       	rjmp	.-4      	; 0x5e4 <rf12_rxdata+0x2c>
     5e8:	8f b1       	in	r24, 0x0f	; 15
     5ea:	81 e8       	ldi	r24, 0x81	; 129
     5ec:	8f b9       	out	0x0f, r24	; 15
     5ee:	77 9b       	sbis	0x0e, 7	; 14
     5f0:	fe cf       	rjmp	.-4      	; 0x5ee <rf12_rxdata+0x36>
     5f2:	8f b1       	in	r24, 0x0f	; 15
     5f4:	c4 9a       	sbi	0x18, 4	; 24
     5f6:	c4 98       	cbi	0x18, 4	; 24
     5f8:	8a ec       	ldi	r24, 0xCA	; 202
     5fa:	8f b9       	out	0x0f, r24	; 15
     5fc:	77 9b       	sbis	0x0e, 7	; 14
     5fe:	fe cf       	rjmp	.-4      	; 0x5fc <rf12_rxdata+0x44>
     600:	8f b1       	in	r24, 0x0f	; 15
     602:	83 e8       	ldi	r24, 0x83	; 131
     604:	8f b9       	out	0x0f, r24	; 15
     606:	77 9b       	sbis	0x0e, 7	; 14
     608:	fe cf       	rjmp	.-4      	; 0x606 <rf12_rxdata+0x4e>
     60a:	8f b1       	in	r24, 0x0f	; 15
     60c:	c4 9a       	sbi	0x18, 4	; 24
     60e:	c4 98       	cbi	0x18, 4	; 24
     610:	00 00       	nop
     612:	00 00       	nop
     614:	00 00       	nop
     616:	80 e0       	ldi	r24, 0x00	; 0
     618:	90 e0       	ldi	r25, 0x00	; 0
     61a:	a0 e0       	ldi	r26, 0x00	; 0
     61c:	b0 e0       	ldi	r27, 0x00	; 0
     61e:	0b c0       	rjmp	.+22     	; 0x636 <rf12_rxdata+0x7e>
     620:	81 3a       	cpi	r24, 0xA1	; 161
     622:	26 e8       	ldi	r18, 0x86	; 134
     624:	92 07       	cpc	r25, r18
     626:	21 e0       	ldi	r18, 0x01	; 1
     628:	a2 07       	cpc	r26, r18
     62a:	20 e0       	ldi	r18, 0x00	; 0
     62c:	b2 07       	cpc	r27, r18
     62e:	29 f0       	breq	.+10     	; 0x63a <rf12_rxdata+0x82>
     630:	01 96       	adiw	r24, 0x01	; 1
     632:	a1 1d       	adc	r26, r1
     634:	b1 1d       	adc	r27, r1
     636:	b6 9b       	sbis	0x16, 6	; 22
     638:	f3 cf       	rjmp	.-26     	; 0x620 <rf12_rxdata+0x68>
     63a:	c4 9a       	sbi	0x18, 4	; 24
     63c:	c4 98       	cbi	0x18, 4	; 24
     63e:	80 eb       	ldi	r24, 0xB0	; 176
     640:	8f b9       	out	0x0f, r24	; 15
     642:	77 9b       	sbis	0x0e, 7	; 14
     644:	fe cf       	rjmp	.-4      	; 0x642 <rf12_rxdata+0x8a>
     646:	8f b1       	in	r24, 0x0f	; 15
     648:	1f b8       	out	0x0f, r1	; 15
     64a:	77 9b       	sbis	0x0e, 7	; 14
     64c:	fe cf       	rjmp	.-4      	; 0x64a <rf12_rxdata+0x92>
     64e:	8f b1       	in	r24, 0x0f	; 15
     650:	c4 9a       	sbi	0x18, 4	; 24
	unsigned char i, number;
	unsigned int crc, crc_chk;
	rf12_trans(0x82C8);			// RX on
	rf12_trans(0xCA81);			// set FIFO mode
	rf12_trans(0xCA83);			// enable FIFO
	
	rf12_ready();
	number = rf12_trans(0xB000) & 0x00FF;
     652:	08 2f       	mov	r16, r24
     654:	89 3c       	cpi	r24, 0xC9	; 201
     656:	08 f0       	brcs	.+2      	; 0x65a <rf12_rxdata+0xa2>
     658:	08 ec       	ldi	r16, 0xC8	; 200
     65a:	e0 2e       	mov	r14, r16
     65c:	ff 24       	eor	r15, r15
     65e:	9e 2d       	mov	r25, r14
     660:	88 27       	eor	r24, r24
     662:	97 fd       	sbrc	r25, 7
     664:	5c c1       	rjmp	.+696    	; 0x91e <rf12_rxdata+0x366>
     666:	20 e0       	ldi	r18, 0x00	; 0
     668:	30 e0       	ldi	r19, 0x00	; 0
     66a:	ac 01       	movw	r20, r24
     66c:	44 0f       	add	r20, r20
     66e:	55 1f       	adc	r21, r21
     670:	ca 01       	movw	r24, r20
     672:	82 27       	eor	r24, r18
     674:	93 27       	eor	r25, r19
     676:	97 fd       	sbrc	r25, 7
     678:	5c c1       	rjmp	.+696    	; 0x932 <rf12_rxdata+0x37a>
     67a:	22 0f       	add	r18, r18
     67c:	33 1f       	adc	r19, r19
     67e:	44 0f       	add	r20, r20
     680:	55 1f       	adc	r21, r21
     682:	ca 01       	movw	r24, r20
     684:	82 27       	eor	r24, r18
     686:	93 27       	eor	r25, r19
     688:	97 fd       	sbrc	r25, 7
     68a:	5e c1       	rjmp	.+700    	; 0x948 <rf12_rxdata+0x390>
     68c:	22 0f       	add	r18, r18
     68e:	33 1f       	adc	r19, r19
     690:	44 0f       	add	r20, r20
     692:	55 1f       	adc	r21, r21
     694:	ca 01       	movw	r24, r20
     696:	82 27       	eor	r24, r18
     698:	93 27       	eor	r25, r19
     69a:	97 fd       	sbrc	r25, 7
     69c:	62 c1       	rjmp	.+708    	; 0x962 <rf12_rxdata+0x3aa>
     69e:	22 0f       	add	r18, r18
     6a0:	33 1f       	adc	r19, r19
     6a2:	44 0f       	add	r20, r20
     6a4:	55 1f       	adc	r21, r21
     6a6:	ca 01       	movw	r24, r20
     6a8:	82 27       	eor	r24, r18
     6aa:	93 27       	eor	r25, r19
     6ac:	97 fd       	sbrc	r25, 7
     6ae:	66 c1       	rjmp	.+716    	; 0x97c <rf12_rxdata+0x3c4>
     6b0:	22 0f       	add	r18, r18
     6b2:	33 1f       	adc	r19, r19
     6b4:	ba 01       	movw	r22, r20
     6b6:	66 0f       	add	r22, r22
     6b8:	77 1f       	adc	r23, r23
     6ba:	c9 01       	movw	r24, r18
     6bc:	86 27       	eor	r24, r22
     6be:	97 27       	eor	r25, r23
     6c0:	97 fd       	sbrc	r25, 7
     6c2:	6a c1       	rjmp	.+724    	; 0x998 <rf12_rxdata+0x3e0>
     6c4:	a9 01       	movw	r20, r18
     6c6:	44 0f       	add	r20, r20
     6c8:	55 1f       	adc	r21, r21
     6ca:	9b 01       	movw	r18, r22
     6cc:	22 0f       	add	r18, r18
     6ce:	33 1f       	adc	r19, r19
     6d0:	c9 01       	movw	r24, r18
     6d2:	84 27       	eor	r24, r20
     6d4:	95 27       	eor	r25, r21
     6d6:	97 fd       	sbrc	r25, 7
     6d8:	6e c1       	rjmp	.+732    	; 0x9b6 <rf12_rxdata+0x3fe>
     6da:	44 0f       	add	r20, r20
     6dc:	55 1f       	adc	r21, r21
     6de:	22 0f       	add	r18, r18
     6e0:	33 1f       	adc	r19, r19
     6e2:	24 27       	eor	r18, r20
     6e4:	35 27       	eor	r19, r21
     6e6:	37 fd       	sbrc	r19, 7
     6e8:	72 c1       	rjmp	.+740    	; 0x9ce <rf12_rxdata+0x416>
     6ea:	ba 01       	movw	r22, r20
     6ec:	66 0f       	add	r22, r22
     6ee:	77 1f       	adc	r23, r23
	if (number > 200) number = 200;
	crc_chk = crcUpdate(0, number);

	for (i=0; i<number; i++)
     6f0:	00 23       	and	r16, r16
     6f2:	09 f4       	brne	.+2      	; 0x6f6 <rf12_rxdata+0x13e>
     6f4:	78 c0       	rjmp	.+240    	; 0x7e6 <rf12_rxdata+0x22e>
     6f6:	10 e0       	ldi	r17, 0x00	; 0
     6f8:	c4 98       	cbi	0x18, 4	; 24
     6fa:	00 00       	nop
     6fc:	00 00       	nop
     6fe:	00 00       	nop
     700:	80 e0       	ldi	r24, 0x00	; 0
     702:	90 e0       	ldi	r25, 0x00	; 0
     704:	a0 e0       	ldi	r26, 0x00	; 0
     706:	b0 e0       	ldi	r27, 0x00	; 0
     708:	0b c0       	rjmp	.+22     	; 0x720 <rf12_rxdata+0x168>
     70a:	81 3a       	cpi	r24, 0xA1	; 161
     70c:	36 e8       	ldi	r19, 0x86	; 134
     70e:	93 07       	cpc	r25, r19
     710:	31 e0       	ldi	r19, 0x01	; 1
     712:	a3 07       	cpc	r26, r19
     714:	30 e0       	ldi	r19, 0x00	; 0
     716:	b3 07       	cpc	r27, r19
     718:	29 f0       	breq	.+10     	; 0x724 <rf12_rxdata+0x16c>
     71a:	01 96       	adiw	r24, 0x01	; 1
     71c:	a1 1d       	adc	r26, r1
     71e:	b1 1d       	adc	r27, r1
     720:	b6 9b       	sbis	0x16, 6	; 22
     722:	f3 cf       	rjmp	.-26     	; 0x70a <rf12_rxdata+0x152>
     724:	c4 9a       	sbi	0x18, 4	; 24
	{
		rf12_ready();
		data[i] = (unsigned char) (rf12_trans(0xB000) & 0x00FF);
     726:	fe 01       	movw	r30, r28
     728:	e1 0f       	add	r30, r17
     72a:	f1 1d       	adc	r31, r1
     72c:	c4 98       	cbi	0x18, 4	; 24
     72e:	80 eb       	ldi	r24, 0xB0	; 176
     730:	8f b9       	out	0x0f, r24	; 15
     732:	77 9b       	sbis	0x0e, 7	; 14
     734:	fe cf       	rjmp	.-4      	; 0x732 <rf12_rxdata+0x17a>
     736:	8f b1       	in	r24, 0x0f	; 15
     738:	1f b8       	out	0x0f, r1	; 15
     73a:	77 9b       	sbis	0x0e, 7	; 14
     73c:	fe cf       	rjmp	.-4      	; 0x73a <rf12_rxdata+0x182>
     73e:	8f b1       	in	r24, 0x0f	; 15
     740:	c4 9a       	sbi	0x18, 4	; 24
     742:	80 83       	st	Z, r24
     744:	99 27       	eor	r25, r25
     746:	58 2f       	mov	r21, r24
     748:	44 27       	eor	r20, r20
     74a:	cb 01       	movw	r24, r22
     74c:	84 27       	eor	r24, r20
     74e:	95 27       	eor	r25, r21
     750:	97 fd       	sbrc	r25, 7
     752:	dd c0       	rjmp	.+442    	; 0x90e <rf12_rxdata+0x356>
     754:	9b 01       	movw	r18, r22
     756:	22 0f       	add	r18, r18
     758:	33 1f       	adc	r19, r19
     75a:	44 0f       	add	r20, r20
     75c:	55 1f       	adc	r21, r21
     75e:	ca 01       	movw	r24, r20
     760:	82 27       	eor	r24, r18
     762:	93 27       	eor	r25, r19
     764:	97 fd       	sbrc	r25, 7
     766:	cc c0       	rjmp	.+408    	; 0x900 <rf12_rxdata+0x348>
     768:	22 0f       	add	r18, r18
     76a:	33 1f       	adc	r19, r19
     76c:	44 0f       	add	r20, r20
     76e:	55 1f       	adc	r21, r21
     770:	ca 01       	movw	r24, r20
     772:	82 27       	eor	r24, r18
     774:	93 27       	eor	r25, r19
     776:	97 fd       	sbrc	r25, 7
     778:	bc c0       	rjmp	.+376    	; 0x8f2 <rf12_rxdata+0x33a>
     77a:	22 0f       	add	r18, r18
     77c:	33 1f       	adc	r19, r19
     77e:	44 0f       	add	r20, r20
     780:	55 1f       	adc	r21, r21
     782:	ca 01       	movw	r24, r20
     784:	82 27       	eor	r24, r18
     786:	93 27       	eor	r25, r19
     788:	97 fd       	sbrc	r25, 7
     78a:	ac c0       	rjmp	.+344    	; 0x8e4 <rf12_rxdata+0x32c>
     78c:	22 0f       	add	r18, r18
     78e:	33 1f       	adc	r19, r19
     790:	44 0f       	add	r20, r20
     792:	55 1f       	adc	r21, r21
     794:	ca 01       	movw	r24, r20
     796:	82 27       	eor	r24, r18
     798:	93 27       	eor	r25, r19
     79a:	97 fd       	sbrc	r25, 7
     79c:	9c c0       	rjmp	.+312    	; 0x8d6 <rf12_rxdata+0x31e>
     79e:	22 0f       	add	r18, r18
     7a0:	33 1f       	adc	r19, r19
     7a2:	ba 01       	movw	r22, r20
     7a4:	66 0f       	add	r22, r22
     7a6:	77 1f       	adc	r23, r23
     7a8:	cb 01       	movw	r24, r22
     7aa:	82 27       	eor	r24, r18
     7ac:	93 27       	eor	r25, r19
     7ae:	97 fd       	sbrc	r25, 7
     7b0:	8a c0       	rjmp	.+276    	; 0x8c6 <rf12_rxdata+0x30e>
     7b2:	a9 01       	movw	r20, r18
     7b4:	44 0f       	add	r20, r20
     7b6:	55 1f       	adc	r21, r21
     7b8:	9b 01       	movw	r18, r22
     7ba:	22 0f       	add	r18, r18
     7bc:	33 1f       	adc	r19, r19
     7be:	c9 01       	movw	r24, r18
     7c0:	84 27       	eor	r24, r20
     7c2:	95 27       	eor	r25, r21
     7c4:	97 fd       	sbrc	r25, 7
     7c6:	78 c0       	rjmp	.+240    	; 0x8b8 <rf12_rxdata+0x300>
     7c8:	44 0f       	add	r20, r20
     7ca:	55 1f       	adc	r21, r21
     7cc:	22 0f       	add	r18, r18
     7ce:	33 1f       	adc	r19, r19
     7d0:	24 27       	eor	r18, r20
     7d2:	35 27       	eor	r19, r21
     7d4:	37 fd       	sbrc	r19, 7
     7d6:	68 c0       	rjmp	.+208    	; 0x8a8 <rf12_rxdata+0x2f0>
     7d8:	ba 01       	movw	r22, r20
     7da:	66 0f       	add	r22, r22
     7dc:	77 1f       	adc	r23, r23
     7de:	1f 5f       	subi	r17, 0xFF	; 255
     7e0:	01 17       	cp	r16, r17
     7e2:	09 f0       	breq	.+2      	; 0x7e6 <rf12_rxdata+0x22e>
     7e4:	89 cf       	rjmp	.-238    	; 0x6f8 <rf12_rxdata+0x140>
		crc_chk = crcUpdate(crc_chk, data[i]);
	}
	data[number+1] = 0;
     7e6:	ce 0d       	add	r28, r14
     7e8:	df 1d       	adc	r29, r15
     7ea:	19 82       	std	Y+1, r1	; 0x01
     7ec:	c4 98       	cbi	0x18, 4	; 24
     7ee:	00 00       	nop
     7f0:	00 00       	nop
     7f2:	00 00       	nop
     7f4:	80 e0       	ldi	r24, 0x00	; 0
     7f6:	90 e0       	ldi	r25, 0x00	; 0
     7f8:	a0 e0       	ldi	r26, 0x00	; 0
     7fa:	b0 e0       	ldi	r27, 0x00	; 0
     7fc:	0b c0       	rjmp	.+22     	; 0x814 <rf12_rxdata+0x25c>
     7fe:	81 3a       	cpi	r24, 0xA1	; 161
     800:	26 e8       	ldi	r18, 0x86	; 134
     802:	92 07       	cpc	r25, r18
     804:	21 e0       	ldi	r18, 0x01	; 1
     806:	a2 07       	cpc	r26, r18
     808:	20 e0       	ldi	r18, 0x00	; 0
     80a:	b2 07       	cpc	r27, r18
     80c:	29 f0       	breq	.+10     	; 0x818 <rf12_rxdata+0x260>
     80e:	01 96       	adiw	r24, 0x01	; 1
     810:	a1 1d       	adc	r26, r1
     812:	b1 1d       	adc	r27, r1
     814:	b6 9b       	sbis	0x16, 6	; 22
     816:	f3 cf       	rjmp	.-26     	; 0x7fe <rf12_rxdata+0x246>
     818:	c4 9a       	sbi	0x18, 4	; 24
     81a:	c4 98       	cbi	0x18, 4	; 24
     81c:	80 eb       	ldi	r24, 0xB0	; 176
     81e:	8f b9       	out	0x0f, r24	; 15
     820:	77 9b       	sbis	0x0e, 7	; 14
     822:	fe cf       	rjmp	.-4      	; 0x820 <rf12_rxdata+0x268>
     824:	4f b1       	in	r20, 0x0f	; 15
     826:	1f b8       	out	0x0f, r1	; 15
     828:	77 9b       	sbis	0x0e, 7	; 14
     82a:	fe cf       	rjmp	.-4      	; 0x828 <rf12_rxdata+0x270>
     82c:	2f b1       	in	r18, 0x0f	; 15
     82e:	c4 9a       	sbi	0x18, 4	; 24
     830:	c4 98       	cbi	0x18, 4	; 24
     832:	00 00       	nop
     834:	00 00       	nop
     836:	00 00       	nop
     838:	80 e0       	ldi	r24, 0x00	; 0
     83a:	90 e0       	ldi	r25, 0x00	; 0
     83c:	a0 e0       	ldi	r26, 0x00	; 0
     83e:	b0 e0       	ldi	r27, 0x00	; 0
     840:	0b c0       	rjmp	.+22     	; 0x858 <rf12_rxdata+0x2a0>
     842:	81 3a       	cpi	r24, 0xA1	; 161
     844:	36 e8       	ldi	r19, 0x86	; 134
     846:	93 07       	cpc	r25, r19
     848:	31 e0       	ldi	r19, 0x01	; 1
     84a:	a3 07       	cpc	r26, r19
     84c:	30 e0       	ldi	r19, 0x00	; 0
     84e:	b3 07       	cpc	r27, r19
     850:	29 f0       	breq	.+10     	; 0x85c <rf12_rxdata+0x2a4>
     852:	01 96       	adiw	r24, 0x01	; 1
     854:	a1 1d       	adc	r26, r1
     856:	b1 1d       	adc	r27, r1
     858:	b6 9b       	sbis	0x16, 6	; 22
     85a:	f3 cf       	rjmp	.-26     	; 0x842 <rf12_rxdata+0x28a>
     85c:	c4 9a       	sbi	0x18, 4	; 24
     85e:	c4 98       	cbi	0x18, 4	; 24
     860:	80 eb       	ldi	r24, 0xB0	; 176
     862:	8f b9       	out	0x0f, r24	; 15
     864:	77 9b       	sbis	0x0e, 7	; 14
     866:	fe cf       	rjmp	.-4      	; 0x864 <rf12_rxdata+0x2ac>
     868:	3f b1       	in	r19, 0x0f	; 15
     86a:	1f b8       	out	0x0f, r1	; 15
     86c:	77 9b       	sbis	0x0e, 7	; 14
     86e:	fe cf       	rjmp	.-4      	; 0x86c <rf12_rxdata+0x2b4>
     870:	9f b1       	in	r25, 0x0f	; 15
     872:	c4 9a       	sbi	0x18, 4	; 24
     874:	c4 98       	cbi	0x18, 4	; 24
     876:	82 e8       	ldi	r24, 0x82	; 130
     878:	8f b9       	out	0x0f, r24	; 15
     87a:	77 9b       	sbis	0x0e, 7	; 14
     87c:	fe cf       	rjmp	.-4      	; 0x87a <rf12_rxdata+0x2c2>
     87e:	8f b1       	in	r24, 0x0f	; 15
     880:	88 e0       	ldi	r24, 0x08	; 8
     882:	8f b9       	out	0x0f, r24	; 15
     884:	77 9b       	sbis	0x0e, 7	; 14
     886:	fe cf       	rjmp	.-4      	; 0x884 <rf12_rxdata+0x2cc>
     888:	8f b1       	in	r24, 0x0f	; 15
     88a:	c4 9a       	sbi	0x18, 4	; 24
	rf12_ready();
	crc = rf12_trans(0xB000) & 0x00FF;
     88c:	33 27       	eor	r19, r19
	rf12_ready();
	crc |=  rf12_trans(0xB000) << 8;

	rf12_trans(0x8208);			// RX off

	if (crc != crc_chk)
     88e:	89 2f       	mov	r24, r25
     890:	99 27       	eor	r25, r25
     892:	98 2f       	mov	r25, r24
     894:	88 27       	eor	r24, r24
     896:	28 2b       	or	r18, r24
     898:	39 2b       	or	r19, r25
     89a:	62 17       	cp	r22, r18
     89c:	73 07       	cpc	r23, r19
     89e:	09 f4       	brne	.+2      	; 0x8a2 <rf12_rxdata+0x2ea>
     8a0:	9e c0       	rjmp	.+316    	; 0x9de <rf12_rxdata+0x426>
     8a2:	ee 24       	eor	r14, r14
     8a4:	ff 24       	eor	r15, r15
     8a6:	9b c0       	rjmp	.+310    	; 0x9de <rf12_rxdata+0x426>
     8a8:	ba 01       	movw	r22, r20
     8aa:	66 0f       	add	r22, r22
     8ac:	77 1f       	adc	r23, r23
     8ae:	81 e2       	ldi	r24, 0x21	; 33
     8b0:	90 e1       	ldi	r25, 0x10	; 16
     8b2:	68 27       	eor	r22, r24
     8b4:	79 27       	eor	r23, r25
     8b6:	93 cf       	rjmp	.-218    	; 0x7de <rf12_rxdata+0x226>
     8b8:	44 0f       	add	r20, r20
     8ba:	55 1f       	adc	r21, r21
     8bc:	81 e2       	ldi	r24, 0x21	; 33
     8be:	90 e1       	ldi	r25, 0x10	; 16
     8c0:	48 27       	eor	r20, r24
     8c2:	59 27       	eor	r21, r25
     8c4:	83 cf       	rjmp	.-250    	; 0x7cc <rf12_rxdata+0x214>
     8c6:	a9 01       	movw	r20, r18
     8c8:	44 0f       	add	r20, r20
     8ca:	55 1f       	adc	r21, r21
     8cc:	81 e2       	ldi	r24, 0x21	; 33
     8ce:	90 e1       	ldi	r25, 0x10	; 16
     8d0:	48 27       	eor	r20, r24
     8d2:	59 27       	eor	r21, r25
     8d4:	71 cf       	rjmp	.-286    	; 0x7b8 <rf12_rxdata+0x200>
     8d6:	22 0f       	add	r18, r18
     8d8:	33 1f       	adc	r19, r19
     8da:	81 e2       	ldi	r24, 0x21	; 33
     8dc:	90 e1       	ldi	r25, 0x10	; 16
     8de:	28 27       	eor	r18, r24
     8e0:	39 27       	eor	r19, r25
     8e2:	5f cf       	rjmp	.-322    	; 0x7a2 <rf12_rxdata+0x1ea>
     8e4:	22 0f       	add	r18, r18
     8e6:	33 1f       	adc	r19, r19
     8e8:	81 e2       	ldi	r24, 0x21	; 33
     8ea:	90 e1       	ldi	r25, 0x10	; 16
     8ec:	28 27       	eor	r18, r24
     8ee:	39 27       	eor	r19, r25
     8f0:	4f cf       	rjmp	.-354    	; 0x790 <rf12_rxdata+0x1d8>
     8f2:	22 0f       	add	r18, r18
     8f4:	33 1f       	adc	r19, r19
     8f6:	81 e2       	ldi	r24, 0x21	; 33
     8f8:	90 e1       	ldi	r25, 0x10	; 16
     8fa:	28 27       	eor	r18, r24
     8fc:	39 27       	eor	r19, r25
     8fe:	3f cf       	rjmp	.-386    	; 0x77e <rf12_rxdata+0x1c6>
     900:	22 0f       	add	r18, r18
     902:	33 1f       	adc	r19, r19
     904:	81 e2       	ldi	r24, 0x21	; 33
     906:	90 e1       	ldi	r25, 0x10	; 16
     908:	28 27       	eor	r18, r24
     90a:	39 27       	eor	r19, r25
     90c:	2f cf       	rjmp	.-418    	; 0x76c <rf12_rxdata+0x1b4>
     90e:	9b 01       	movw	r18, r22
     910:	22 0f       	add	r18, r18
     912:	33 1f       	adc	r19, r19
     914:	81 e2       	ldi	r24, 0x21	; 33
     916:	90 e1       	ldi	r25, 0x10	; 16
     918:	28 27       	eor	r18, r24
     91a:	39 27       	eor	r19, r25
     91c:	1e cf       	rjmp	.-452    	; 0x75a <rf12_rxdata+0x1a2>
     91e:	21 e2       	ldi	r18, 0x21	; 33
     920:	30 e1       	ldi	r19, 0x10	; 16
     922:	ac 01       	movw	r20, r24
     924:	44 0f       	add	r20, r20
     926:	55 1f       	adc	r21, r21
     928:	ca 01       	movw	r24, r20
     92a:	82 27       	eor	r24, r18
     92c:	93 27       	eor	r25, r19
     92e:	97 ff       	sbrs	r25, 7
     930:	a4 ce       	rjmp	.-696    	; 0x67a <rf12_rxdata+0xc2>
     932:	22 0f       	add	r18, r18
     934:	33 1f       	adc	r19, r19
     936:	21 62       	ori	r18, 0x21	; 33
     938:	30 61       	ori	r19, 0x10	; 16
     93a:	44 0f       	add	r20, r20
     93c:	55 1f       	adc	r21, r21
     93e:	ca 01       	movw	r24, r20
     940:	82 27       	eor	r24, r18
     942:	93 27       	eor	r25, r19
     944:	97 ff       	sbrs	r25, 7
     946:	a2 ce       	rjmp	.-700    	; 0x68c <rf12_rxdata+0xd4>
     948:	22 0f       	add	r18, r18
     94a:	33 1f       	adc	r19, r19
     94c:	81 e2       	ldi	r24, 0x21	; 33
     94e:	90 e1       	ldi	r25, 0x10	; 16
     950:	28 27       	eor	r18, r24
     952:	39 27       	eor	r19, r25
     954:	44 0f       	add	r20, r20
     956:	55 1f       	adc	r21, r21
     958:	ca 01       	movw	r24, r20
     95a:	82 27       	eor	r24, r18
     95c:	93 27       	eor	r25, r19
     95e:	97 ff       	sbrs	r25, 7
     960:	9e ce       	rjmp	.-708    	; 0x69e <rf12_rxdata+0xe6>
     962:	22 0f       	add	r18, r18
     964:	33 1f       	adc	r19, r19
     966:	81 e2       	ldi	r24, 0x21	; 33
     968:	90 e1       	ldi	r25, 0x10	; 16
     96a:	28 27       	eor	r18, r24
     96c:	39 27       	eor	r19, r25
     96e:	44 0f       	add	r20, r20
     970:	55 1f       	adc	r21, r21
     972:	ca 01       	movw	r24, r20
     974:	82 27       	eor	r24, r18
     976:	93 27       	eor	r25, r19
     978:	97 ff       	sbrs	r25, 7
     97a:	9a ce       	rjmp	.-716    	; 0x6b0 <rf12_rxdata+0xf8>
     97c:	22 0f       	add	r18, r18
     97e:	33 1f       	adc	r19, r19
     980:	81 e2       	ldi	r24, 0x21	; 33
     982:	90 e1       	ldi	r25, 0x10	; 16
     984:	28 27       	eor	r18, r24
     986:	39 27       	eor	r19, r25
     988:	ba 01       	movw	r22, r20
     98a:	66 0f       	add	r22, r22
     98c:	77 1f       	adc	r23, r23
     98e:	c9 01       	movw	r24, r18
     990:	86 27       	eor	r24, r22
     992:	97 27       	eor	r25, r23
     994:	97 ff       	sbrs	r25, 7
     996:	96 ce       	rjmp	.-724    	; 0x6c4 <rf12_rxdata+0x10c>
     998:	a9 01       	movw	r20, r18
     99a:	44 0f       	add	r20, r20
     99c:	55 1f       	adc	r21, r21
     99e:	81 e2       	ldi	r24, 0x21	; 33
     9a0:	90 e1       	ldi	r25, 0x10	; 16
     9a2:	48 27       	eor	r20, r24
     9a4:	59 27       	eor	r21, r25
     9a6:	9b 01       	movw	r18, r22
     9a8:	22 0f       	add	r18, r18
     9aa:	33 1f       	adc	r19, r19
     9ac:	c9 01       	movw	r24, r18
     9ae:	84 27       	eor	r24, r20
     9b0:	95 27       	eor	r25, r21
     9b2:	97 ff       	sbrs	r25, 7
     9b4:	92 ce       	rjmp	.-732    	; 0x6da <rf12_rxdata+0x122>
     9b6:	44 0f       	add	r20, r20
     9b8:	55 1f       	adc	r21, r21
     9ba:	81 e2       	ldi	r24, 0x21	; 33
     9bc:	90 e1       	ldi	r25, 0x10	; 16
     9be:	48 27       	eor	r20, r24
     9c0:	59 27       	eor	r21, r25
     9c2:	22 0f       	add	r18, r18
     9c4:	33 1f       	adc	r19, r19
     9c6:	24 27       	eor	r18, r20
     9c8:	35 27       	eor	r19, r21
     9ca:	37 ff       	sbrs	r19, 7
     9cc:	8e ce       	rjmp	.-740    	; 0x6ea <rf12_rxdata+0x132>
     9ce:	ba 01       	movw	r22, r20
     9d0:	66 0f       	add	r22, r22
     9d2:	77 1f       	adc	r23, r23
     9d4:	81 e2       	ldi	r24, 0x21	; 33
     9d6:	90 e1       	ldi	r25, 0x10	; 16
     9d8:	68 27       	eor	r22, r24
     9da:	79 27       	eor	r23, r25
     9dc:	89 ce       	rjmp	.-750    	; 0x6f0 <rf12_rxdata+0x138>
		number = 0;

	return number;
}
     9de:	c7 01       	movw	r24, r14
     9e0:	df 91       	pop	r29
     9e2:	cf 91       	pop	r28
     9e4:	1f 91       	pop	r17
     9e6:	0f 91       	pop	r16
     9e8:	ff 90       	pop	r15
     9ea:	ef 90       	pop	r14
     9ec:	08 95       	ret

000009ee <rf12_txdata>:
     9ee:	0f 93       	push	r16
     9f0:	1f 93       	push	r17
     9f2:	cf 93       	push	r28
     9f4:	df 93       	push	r29
     9f6:	ec 01       	movw	r28, r24
     9f8:	06 2f       	mov	r16, r22
     9fa:	c4 98       	cbi	0x18, 4	; 24
     9fc:	82 e8       	ldi	r24, 0x82	; 130
     9fe:	8f b9       	out	0x0f, r24	; 15
     a00:	77 9b       	sbis	0x0e, 7	; 14
     a02:	fe cf       	rjmp	.-4      	; 0xa00 <rf12_txdata+0x12>
     a04:	8f b1       	in	r24, 0x0f	; 15
     a06:	88 e3       	ldi	r24, 0x38	; 56
     a08:	8f b9       	out	0x0f, r24	; 15
     a0a:	77 9b       	sbis	0x0e, 7	; 14
     a0c:	fe cf       	rjmp	.-4      	; 0xa0a <rf12_txdata+0x1c>
     a0e:	8f b1       	in	r24, 0x0f	; 15
     a10:	c4 9a       	sbi	0x18, 4	; 24
     a12:	c4 98       	cbi	0x18, 4	; 24
     a14:	00 00       	nop
     a16:	00 00       	nop
     a18:	00 00       	nop
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	90 e0       	ldi	r25, 0x00	; 0
     a1e:	a0 e0       	ldi	r26, 0x00	; 0
     a20:	b0 e0       	ldi	r27, 0x00	; 0
     a22:	0b c0       	rjmp	.+22     	; 0xa3a <rf12_txdata+0x4c>
     a24:	81 3a       	cpi	r24, 0xA1	; 161
     a26:	26 e8       	ldi	r18, 0x86	; 134
     a28:	92 07       	cpc	r25, r18
     a2a:	21 e0       	ldi	r18, 0x01	; 1
     a2c:	a2 07       	cpc	r26, r18
     a2e:	20 e0       	ldi	r18, 0x00	; 0
     a30:	b2 07       	cpc	r27, r18
     a32:	29 f0       	breq	.+10     	; 0xa3e <rf12_txdata+0x50>
     a34:	01 96       	adiw	r24, 0x01	; 1
     a36:	a1 1d       	adc	r26, r1
     a38:	b1 1d       	adc	r27, r1
     a3a:	b6 9b       	sbis	0x16, 6	; 22
     a3c:	f3 cf       	rjmp	.-26     	; 0xa24 <rf12_txdata+0x36>
     a3e:	c4 9a       	sbi	0x18, 4	; 24
     a40:	c4 98       	cbi	0x18, 4	; 24
     a42:	88 eb       	ldi	r24, 0xB8	; 184
     a44:	8f b9       	out	0x0f, r24	; 15
     a46:	77 9b       	sbis	0x0e, 7	; 14
     a48:	fe cf       	rjmp	.-4      	; 0xa46 <rf12_txdata+0x58>
     a4a:	8f b1       	in	r24, 0x0f	; 15
     a4c:	8a ea       	ldi	r24, 0xAA	; 170
     a4e:	8f b9       	out	0x0f, r24	; 15
     a50:	77 9b       	sbis	0x0e, 7	; 14
     a52:	fe cf       	rjmp	.-4      	; 0xa50 <rf12_txdata+0x62>
     a54:	8f b1       	in	r24, 0x0f	; 15
     a56:	c4 9a       	sbi	0x18, 4	; 24
     a58:	c4 98       	cbi	0x18, 4	; 24
     a5a:	00 00       	nop
     a5c:	00 00       	nop
     a5e:	00 00       	nop
     a60:	80 e0       	ldi	r24, 0x00	; 0
     a62:	90 e0       	ldi	r25, 0x00	; 0
     a64:	a0 e0       	ldi	r26, 0x00	; 0
     a66:	b0 e0       	ldi	r27, 0x00	; 0
     a68:	0b c0       	rjmp	.+22     	; 0xa80 <rf12_txdata+0x92>
     a6a:	81 3a       	cpi	r24, 0xA1	; 161
     a6c:	26 e8       	ldi	r18, 0x86	; 134
     a6e:	92 07       	cpc	r25, r18
     a70:	21 e0       	ldi	r18, 0x01	; 1
     a72:	a2 07       	cpc	r26, r18
     a74:	20 e0       	ldi	r18, 0x00	; 0
     a76:	b2 07       	cpc	r27, r18
     a78:	29 f0       	breq	.+10     	; 0xa84 <rf12_txdata+0x96>
     a7a:	01 96       	adiw	r24, 0x01	; 1
     a7c:	a1 1d       	adc	r26, r1
     a7e:	b1 1d       	adc	r27, r1
     a80:	b6 9b       	sbis	0x16, 6	; 22
     a82:	f3 cf       	rjmp	.-26     	; 0xa6a <rf12_txdata+0x7c>
     a84:	c4 9a       	sbi	0x18, 4	; 24
     a86:	c4 98       	cbi	0x18, 4	; 24
     a88:	88 eb       	ldi	r24, 0xB8	; 184
     a8a:	8f b9       	out	0x0f, r24	; 15
     a8c:	77 9b       	sbis	0x0e, 7	; 14
     a8e:	fe cf       	rjmp	.-4      	; 0xa8c <rf12_txdata+0x9e>
     a90:	8f b1       	in	r24, 0x0f	; 15
     a92:	8a ea       	ldi	r24, 0xAA	; 170
     a94:	8f b9       	out	0x0f, r24	; 15
     a96:	77 9b       	sbis	0x0e, 7	; 14
     a98:	fe cf       	rjmp	.-4      	; 0xa96 <rf12_txdata+0xa8>
     a9a:	8f b1       	in	r24, 0x0f	; 15
     a9c:	c4 9a       	sbi	0x18, 4	; 24
     a9e:	c4 98       	cbi	0x18, 4	; 24
     aa0:	00 00       	nop
     aa2:	00 00       	nop
     aa4:	00 00       	nop
     aa6:	80 e0       	ldi	r24, 0x00	; 0
     aa8:	90 e0       	ldi	r25, 0x00	; 0
     aaa:	a0 e0       	ldi	r26, 0x00	; 0
     aac:	b0 e0       	ldi	r27, 0x00	; 0
     aae:	0b c0       	rjmp	.+22     	; 0xac6 <rf12_txdata+0xd8>
     ab0:	81 3a       	cpi	r24, 0xA1	; 161
     ab2:	26 e8       	ldi	r18, 0x86	; 134
     ab4:	92 07       	cpc	r25, r18
     ab6:	21 e0       	ldi	r18, 0x01	; 1
     ab8:	a2 07       	cpc	r26, r18
     aba:	20 e0       	ldi	r18, 0x00	; 0
     abc:	b2 07       	cpc	r27, r18
     abe:	29 f0       	breq	.+10     	; 0xaca <rf12_txdata+0xdc>
     ac0:	01 96       	adiw	r24, 0x01	; 1
     ac2:	a1 1d       	adc	r26, r1
     ac4:	b1 1d       	adc	r27, r1
     ac6:	b6 9b       	sbis	0x16, 6	; 22
     ac8:	f3 cf       	rjmp	.-26     	; 0xab0 <rf12_txdata+0xc2>
     aca:	c4 9a       	sbi	0x18, 4	; 24
     acc:	c4 98       	cbi	0x18, 4	; 24
     ace:	88 eb       	ldi	r24, 0xB8	; 184
     ad0:	8f b9       	out	0x0f, r24	; 15
     ad2:	77 9b       	sbis	0x0e, 7	; 14
     ad4:	fe cf       	rjmp	.-4      	; 0xad2 <rf12_txdata+0xe4>
     ad6:	8f b1       	in	r24, 0x0f	; 15
     ad8:	8a ea       	ldi	r24, 0xAA	; 170
     ada:	8f b9       	out	0x0f, r24	; 15
     adc:	77 9b       	sbis	0x0e, 7	; 14
     ade:	fe cf       	rjmp	.-4      	; 0xadc <rf12_txdata+0xee>
     ae0:	8f b1       	in	r24, 0x0f	; 15
     ae2:	c4 9a       	sbi	0x18, 4	; 24
     ae4:	c4 98       	cbi	0x18, 4	; 24
     ae6:	00 00       	nop
     ae8:	00 00       	nop
     aea:	00 00       	nop
     aec:	80 e0       	ldi	r24, 0x00	; 0
     aee:	90 e0       	ldi	r25, 0x00	; 0
     af0:	a0 e0       	ldi	r26, 0x00	; 0
     af2:	b0 e0       	ldi	r27, 0x00	; 0
     af4:	0b c0       	rjmp	.+22     	; 0xb0c <rf12_txdata+0x11e>
     af6:	81 3a       	cpi	r24, 0xA1	; 161
     af8:	26 e8       	ldi	r18, 0x86	; 134
     afa:	92 07       	cpc	r25, r18
     afc:	21 e0       	ldi	r18, 0x01	; 1
     afe:	a2 07       	cpc	r26, r18
     b00:	20 e0       	ldi	r18, 0x00	; 0
     b02:	b2 07       	cpc	r27, r18
     b04:	29 f0       	breq	.+10     	; 0xb10 <rf12_txdata+0x122>
     b06:	01 96       	adiw	r24, 0x01	; 1
     b08:	a1 1d       	adc	r26, r1
     b0a:	b1 1d       	adc	r27, r1
     b0c:	b6 9b       	sbis	0x16, 6	; 22
     b0e:	f3 cf       	rjmp	.-26     	; 0xaf6 <rf12_txdata+0x108>
     b10:	c4 9a       	sbi	0x18, 4	; 24
     b12:	c4 98       	cbi	0x18, 4	; 24
     b14:	88 eb       	ldi	r24, 0xB8	; 184
     b16:	8f b9       	out	0x0f, r24	; 15
     b18:	77 9b       	sbis	0x0e, 7	; 14
     b1a:	fe cf       	rjmp	.-4      	; 0xb18 <rf12_txdata+0x12a>
     b1c:	8f b1       	in	r24, 0x0f	; 15
     b1e:	8d e2       	ldi	r24, 0x2D	; 45
     b20:	8f b9       	out	0x0f, r24	; 15
     b22:	77 9b       	sbis	0x0e, 7	; 14
     b24:	fe cf       	rjmp	.-4      	; 0xb22 <rf12_txdata+0x134>
     b26:	8f b1       	in	r24, 0x0f	; 15
     b28:	c4 9a       	sbi	0x18, 4	; 24
     b2a:	c4 98       	cbi	0x18, 4	; 24
     b2c:	00 00       	nop
     b2e:	00 00       	nop
     b30:	00 00       	nop
     b32:	80 e0       	ldi	r24, 0x00	; 0
     b34:	90 e0       	ldi	r25, 0x00	; 0
     b36:	a0 e0       	ldi	r26, 0x00	; 0
     b38:	b0 e0       	ldi	r27, 0x00	; 0
     b3a:	0b c0       	rjmp	.+22     	; 0xb52 <rf12_txdata+0x164>
     b3c:	81 3a       	cpi	r24, 0xA1	; 161
     b3e:	26 e8       	ldi	r18, 0x86	; 134
     b40:	92 07       	cpc	r25, r18
     b42:	21 e0       	ldi	r18, 0x01	; 1
     b44:	a2 07       	cpc	r26, r18
     b46:	20 e0       	ldi	r18, 0x00	; 0
     b48:	b2 07       	cpc	r27, r18
     b4a:	29 f0       	breq	.+10     	; 0xb56 <rf12_txdata+0x168>
     b4c:	01 96       	adiw	r24, 0x01	; 1
     b4e:	a1 1d       	adc	r26, r1
     b50:	b1 1d       	adc	r27, r1
     b52:	b6 9b       	sbis	0x16, 6	; 22
     b54:	f3 cf       	rjmp	.-26     	; 0xb3c <rf12_txdata+0x14e>
     b56:	c4 9a       	sbi	0x18, 4	; 24
     b58:	c4 98       	cbi	0x18, 4	; 24
     b5a:	88 eb       	ldi	r24, 0xB8	; 184
     b5c:	8f b9       	out	0x0f, r24	; 15
     b5e:	77 9b       	sbis	0x0e, 7	; 14
     b60:	fe cf       	rjmp	.-4      	; 0xb5e <rf12_txdata+0x170>
     b62:	8f b1       	in	r24, 0x0f	; 15
     b64:	84 ed       	ldi	r24, 0xD4	; 212
     b66:	8f b9       	out	0x0f, r24	; 15
     b68:	77 9b       	sbis	0x0e, 7	; 14
     b6a:	fe cf       	rjmp	.-4      	; 0xb68 <rf12_txdata+0x17a>
     b6c:	8f b1       	in	r24, 0x0f	; 15
     b6e:	c4 9a       	sbi	0x18, 4	; 24
     b70:	c4 98       	cbi	0x18, 4	; 24
     b72:	00 00       	nop
     b74:	00 00       	nop
     b76:	00 00       	nop
     b78:	80 e0       	ldi	r24, 0x00	; 0
     b7a:	90 e0       	ldi	r25, 0x00	; 0
     b7c:	a0 e0       	ldi	r26, 0x00	; 0
     b7e:	b0 e0       	ldi	r27, 0x00	; 0
     b80:	0b c0       	rjmp	.+22     	; 0xb98 <rf12_txdata+0x1aa>
     b82:	81 3a       	cpi	r24, 0xA1	; 161
     b84:	26 e8       	ldi	r18, 0x86	; 134
     b86:	92 07       	cpc	r25, r18
     b88:	21 e0       	ldi	r18, 0x01	; 1
     b8a:	a2 07       	cpc	r26, r18
     b8c:	20 e0       	ldi	r18, 0x00	; 0
     b8e:	b2 07       	cpc	r27, r18
     b90:	29 f0       	breq	.+10     	; 0xb9c <rf12_txdata+0x1ae>
     b92:	01 96       	adiw	r24, 0x01	; 1
     b94:	a1 1d       	adc	r26, r1
     b96:	b1 1d       	adc	r27, r1
     b98:	b6 9b       	sbis	0x16, 6	; 22
     b9a:	f3 cf       	rjmp	.-26     	; 0xb82 <rf12_txdata+0x194>
     b9c:	c4 9a       	sbi	0x18, 4	; 24
     b9e:	40 2f       	mov	r20, r16
     ba0:	55 27       	eor	r21, r21
     ba2:	9a 01       	movw	r18, r20
     ba4:	38 6b       	ori	r19, 0xB8	; 184
     ba6:	c4 98       	cbi	0x18, 4	; 24
     ba8:	83 2f       	mov	r24, r19
     baa:	99 27       	eor	r25, r25
     bac:	8f b9       	out	0x0f, r24	; 15
     bae:	77 9b       	sbis	0x0e, 7	; 14
     bb0:	fe cf       	rjmp	.-4      	; 0xbae <rf12_txdata+0x1c0>
     bb2:	8f b1       	in	r24, 0x0f	; 15
     bb4:	2f b9       	out	0x0f, r18	; 15
     bb6:	77 9b       	sbis	0x0e, 7	; 14
     bb8:	fe cf       	rjmp	.-4      	; 0xbb6 <rf12_txdata+0x1c8>
     bba:	8f b1       	in	r24, 0x0f	; 15
     bbc:	c4 9a       	sbi	0x18, 4	; 24
     bbe:	94 2f       	mov	r25, r20
     bc0:	88 27       	eor	r24, r24
     bc2:	97 fd       	sbrc	r25, 7
     bc4:	b4 c1       	rjmp	.+872    	; 0xf2e <rf12_txdata+0x540>
     bc6:	20 e0       	ldi	r18, 0x00	; 0
     bc8:	30 e0       	ldi	r19, 0x00	; 0
     bca:	ac 01       	movw	r20, r24
     bcc:	44 0f       	add	r20, r20
     bce:	55 1f       	adc	r21, r21
     bd0:	ca 01       	movw	r24, r20
     bd2:	82 27       	eor	r24, r18
     bd4:	93 27       	eor	r25, r19
     bd6:	97 fd       	sbrc	r25, 7
     bd8:	b4 c1       	rjmp	.+872    	; 0xf42 <rf12_txdata+0x554>
     bda:	22 0f       	add	r18, r18
     bdc:	33 1f       	adc	r19, r19
     bde:	44 0f       	add	r20, r20
     be0:	55 1f       	adc	r21, r21
     be2:	ca 01       	movw	r24, r20
     be4:	82 27       	eor	r24, r18
     be6:	93 27       	eor	r25, r19
     be8:	97 fd       	sbrc	r25, 7
     bea:	b6 c1       	rjmp	.+876    	; 0xf58 <rf12_txdata+0x56a>
     bec:	22 0f       	add	r18, r18
     bee:	33 1f       	adc	r19, r19
     bf0:	44 0f       	add	r20, r20
     bf2:	55 1f       	adc	r21, r21
     bf4:	ca 01       	movw	r24, r20
     bf6:	82 27       	eor	r24, r18
     bf8:	93 27       	eor	r25, r19
     bfa:	97 fd       	sbrc	r25, 7
     bfc:	ba c1       	rjmp	.+884    	; 0xf72 <rf12_txdata+0x584>
     bfe:	22 0f       	add	r18, r18
     c00:	33 1f       	adc	r19, r19
     c02:	44 0f       	add	r20, r20
     c04:	55 1f       	adc	r21, r21
     c06:	ca 01       	movw	r24, r20
     c08:	82 27       	eor	r24, r18
     c0a:	93 27       	eor	r25, r19
     c0c:	97 fd       	sbrc	r25, 7
     c0e:	be c1       	rjmp	.+892    	; 0xf8c <rf12_txdata+0x59e>
     c10:	22 0f       	add	r18, r18
     c12:	33 1f       	adc	r19, r19
     c14:	fa 01       	movw	r30, r20
     c16:	ee 0f       	add	r30, r30
     c18:	ff 1f       	adc	r31, r31
     c1a:	cf 01       	movw	r24, r30
     c1c:	82 27       	eor	r24, r18
     c1e:	93 27       	eor	r25, r19
     c20:	97 fd       	sbrc	r25, 7
     c22:	c2 c1       	rjmp	.+900    	; 0xfa8 <rf12_txdata+0x5ba>
     c24:	a9 01       	movw	r20, r18
     c26:	44 0f       	add	r20, r20
     c28:	55 1f       	adc	r21, r21
     c2a:	9f 01       	movw	r18, r30
     c2c:	22 0f       	add	r18, r18
     c2e:	33 1f       	adc	r19, r19
     c30:	c9 01       	movw	r24, r18
     c32:	84 27       	eor	r24, r20
     c34:	95 27       	eor	r25, r21
     c36:	97 fd       	sbrc	r25, 7
     c38:	c6 c1       	rjmp	.+908    	; 0xfc6 <rf12_txdata+0x5d8>
     c3a:	44 0f       	add	r20, r20
     c3c:	55 1f       	adc	r21, r21
     c3e:	22 0f       	add	r18, r18
     c40:	33 1f       	adc	r19, r19
     c42:	24 27       	eor	r18, r20
     c44:	35 27       	eor	r19, r21
     c46:	37 fd       	sbrc	r19, 7
     c48:	ca c1       	rjmp	.+916    	; 0xfde <rf12_txdata+0x5f0>
     c4a:	ba 01       	movw	r22, r20
     c4c:	66 0f       	add	r22, r22
     c4e:	77 1f       	adc	r23, r23
     c50:	00 23       	and	r16, r16
     c52:	09 f4       	brne	.+2      	; 0xc56 <rf12_txdata+0x268>
     c54:	7d c0       	rjmp	.+250    	; 0xd50 <rf12_txdata+0x362>
     c56:	10 e0       	ldi	r17, 0x00	; 0
     c58:	c4 98       	cbi	0x18, 4	; 24
     c5a:	00 00       	nop
     c5c:	00 00       	nop
     c5e:	00 00       	nop
     c60:	80 e0       	ldi	r24, 0x00	; 0
     c62:	90 e0       	ldi	r25, 0x00	; 0
     c64:	a0 e0       	ldi	r26, 0x00	; 0
     c66:	b0 e0       	ldi	r27, 0x00	; 0
     c68:	0b c0       	rjmp	.+22     	; 0xc80 <rf12_txdata+0x292>
     c6a:	81 3a       	cpi	r24, 0xA1	; 161
     c6c:	26 e8       	ldi	r18, 0x86	; 134
     c6e:	92 07       	cpc	r25, r18
     c70:	21 e0       	ldi	r18, 0x01	; 1
     c72:	a2 07       	cpc	r26, r18
     c74:	20 e0       	ldi	r18, 0x00	; 0
     c76:	b2 07       	cpc	r27, r18
     c78:	29 f0       	breq	.+10     	; 0xc84 <rf12_txdata+0x296>
     c7a:	01 96       	adiw	r24, 0x01	; 1
     c7c:	a1 1d       	adc	r26, r1
     c7e:	b1 1d       	adc	r27, r1
     c80:	b6 9b       	sbis	0x16, 6	; 22
     c82:	f3 cf       	rjmp	.-26     	; 0xc6a <rf12_txdata+0x27c>
     c84:	c4 9a       	sbi	0x18, 4	; 24
     c86:	fe 01       	movw	r30, r28
     c88:	e1 0f       	add	r30, r17
     c8a:	f1 1d       	adc	r31, r1
     c8c:	80 81       	ld	r24, Z
     c8e:	28 2f       	mov	r18, r24
     c90:	33 27       	eor	r19, r19
     c92:	38 6b       	ori	r19, 0xB8	; 184
     c94:	c4 98       	cbi	0x18, 4	; 24
     c96:	83 2f       	mov	r24, r19
     c98:	99 27       	eor	r25, r25
     c9a:	8f b9       	out	0x0f, r24	; 15
     c9c:	77 9b       	sbis	0x0e, 7	; 14
     c9e:	fe cf       	rjmp	.-4      	; 0xc9c <rf12_txdata+0x2ae>
     ca0:	8f b1       	in	r24, 0x0f	; 15
     ca2:	2f b9       	out	0x0f, r18	; 15
     ca4:	77 9b       	sbis	0x0e, 7	; 14
     ca6:	fe cf       	rjmp	.-4      	; 0xca4 <rf12_txdata+0x2b6>
     ca8:	8f b1       	in	r24, 0x0f	; 15
     caa:	c4 9a       	sbi	0x18, 4	; 24
     cac:	80 81       	ld	r24, Z
     cae:	99 27       	eor	r25, r25
     cb0:	58 2f       	mov	r21, r24
     cb2:	44 27       	eor	r20, r20
     cb4:	cb 01       	movw	r24, r22
     cb6:	84 27       	eor	r24, r20
     cb8:	95 27       	eor	r25, r21
     cba:	97 fd       	sbrc	r25, 7
     cbc:	30 c1       	rjmp	.+608    	; 0xf1e <rf12_txdata+0x530>
     cbe:	9b 01       	movw	r18, r22
     cc0:	22 0f       	add	r18, r18
     cc2:	33 1f       	adc	r19, r19
     cc4:	44 0f       	add	r20, r20
     cc6:	55 1f       	adc	r21, r21
     cc8:	ca 01       	movw	r24, r20
     cca:	82 27       	eor	r24, r18
     ccc:	93 27       	eor	r25, r19
     cce:	97 fd       	sbrc	r25, 7
     cd0:	1f c1       	rjmp	.+574    	; 0xf10 <rf12_txdata+0x522>
     cd2:	22 0f       	add	r18, r18
     cd4:	33 1f       	adc	r19, r19
     cd6:	44 0f       	add	r20, r20
     cd8:	55 1f       	adc	r21, r21
     cda:	ca 01       	movw	r24, r20
     cdc:	82 27       	eor	r24, r18
     cde:	93 27       	eor	r25, r19
     ce0:	97 fd       	sbrc	r25, 7
     ce2:	0f c1       	rjmp	.+542    	; 0xf02 <rf12_txdata+0x514>
     ce4:	22 0f       	add	r18, r18
     ce6:	33 1f       	adc	r19, r19
     ce8:	44 0f       	add	r20, r20
     cea:	55 1f       	adc	r21, r21
     cec:	ca 01       	movw	r24, r20
     cee:	82 27       	eor	r24, r18
     cf0:	93 27       	eor	r25, r19
     cf2:	97 fd       	sbrc	r25, 7
     cf4:	ff c0       	rjmp	.+510    	; 0xef4 <rf12_txdata+0x506>
     cf6:	22 0f       	add	r18, r18
     cf8:	33 1f       	adc	r19, r19
     cfa:	44 0f       	add	r20, r20
     cfc:	55 1f       	adc	r21, r21
     cfe:	ca 01       	movw	r24, r20
     d00:	82 27       	eor	r24, r18
     d02:	93 27       	eor	r25, r19
     d04:	97 fd       	sbrc	r25, 7
     d06:	ef c0       	rjmp	.+478    	; 0xee6 <rf12_txdata+0x4f8>
     d08:	22 0f       	add	r18, r18
     d0a:	33 1f       	adc	r19, r19
     d0c:	fa 01       	movw	r30, r20
     d0e:	ee 0f       	add	r30, r30
     d10:	ff 1f       	adc	r31, r31
     d12:	cf 01       	movw	r24, r30
     d14:	82 27       	eor	r24, r18
     d16:	93 27       	eor	r25, r19
     d18:	97 fd       	sbrc	r25, 7
     d1a:	dd c0       	rjmp	.+442    	; 0xed6 <rf12_txdata+0x4e8>
     d1c:	a9 01       	movw	r20, r18
     d1e:	44 0f       	add	r20, r20
     d20:	55 1f       	adc	r21, r21
     d22:	9f 01       	movw	r18, r30
     d24:	22 0f       	add	r18, r18
     d26:	33 1f       	adc	r19, r19
     d28:	c9 01       	movw	r24, r18
     d2a:	84 27       	eor	r24, r20
     d2c:	95 27       	eor	r25, r21
     d2e:	97 fd       	sbrc	r25, 7
     d30:	cb c0       	rjmp	.+406    	; 0xec8 <rf12_txdata+0x4da>
     d32:	44 0f       	add	r20, r20
     d34:	55 1f       	adc	r21, r21
     d36:	22 0f       	add	r18, r18
     d38:	33 1f       	adc	r19, r19
     d3a:	24 27       	eor	r18, r20
     d3c:	35 27       	eor	r19, r21
     d3e:	37 fd       	sbrc	r19, 7
     d40:	bb c0       	rjmp	.+374    	; 0xeb8 <rf12_txdata+0x4ca>
     d42:	ba 01       	movw	r22, r20
     d44:	66 0f       	add	r22, r22
     d46:	77 1f       	adc	r23, r23
     d48:	1f 5f       	subi	r17, 0xFF	; 255
     d4a:	01 17       	cp	r16, r17
     d4c:	09 f0       	breq	.+2      	; 0xd50 <rf12_txdata+0x362>
     d4e:	84 cf       	rjmp	.-248    	; 0xc58 <rf12_txdata+0x26a>
     d50:	c4 98       	cbi	0x18, 4	; 24
     d52:	00 00       	nop
     d54:	00 00       	nop
     d56:	00 00       	nop
     d58:	80 e0       	ldi	r24, 0x00	; 0
     d5a:	90 e0       	ldi	r25, 0x00	; 0
     d5c:	a0 e0       	ldi	r26, 0x00	; 0
     d5e:	b0 e0       	ldi	r27, 0x00	; 0
     d60:	0b c0       	rjmp	.+22     	; 0xd78 <rf12_txdata+0x38a>
     d62:	81 3a       	cpi	r24, 0xA1	; 161
     d64:	26 e8       	ldi	r18, 0x86	; 134
     d66:	92 07       	cpc	r25, r18
     d68:	21 e0       	ldi	r18, 0x01	; 1
     d6a:	a2 07       	cpc	r26, r18
     d6c:	20 e0       	ldi	r18, 0x00	; 0
     d6e:	b2 07       	cpc	r27, r18
     d70:	29 f0       	breq	.+10     	; 0xd7c <rf12_txdata+0x38e>
     d72:	01 96       	adiw	r24, 0x01	; 1
     d74:	a1 1d       	adc	r26, r1
     d76:	b1 1d       	adc	r27, r1
     d78:	b6 9b       	sbis	0x16, 6	; 22
     d7a:	f3 cf       	rjmp	.-26     	; 0xd62 <rf12_txdata+0x374>
     d7c:	c4 9a       	sbi	0x18, 4	; 24
     d7e:	9b 01       	movw	r18, r22
     d80:	30 70       	andi	r19, 0x00	; 0
     d82:	38 6b       	ori	r19, 0xB8	; 184
     d84:	c4 98       	cbi	0x18, 4	; 24
     d86:	83 2f       	mov	r24, r19
     d88:	99 27       	eor	r25, r25
     d8a:	8f b9       	out	0x0f, r24	; 15
     d8c:	77 9b       	sbis	0x0e, 7	; 14
     d8e:	fe cf       	rjmp	.-4      	; 0xd8c <rf12_txdata+0x39e>
     d90:	8f b1       	in	r24, 0x0f	; 15
     d92:	2f b9       	out	0x0f, r18	; 15
     d94:	77 9b       	sbis	0x0e, 7	; 14
     d96:	fe cf       	rjmp	.-4      	; 0xd94 <rf12_txdata+0x3a6>
     d98:	8f b1       	in	r24, 0x0f	; 15
     d9a:	c4 9a       	sbi	0x18, 4	; 24
     d9c:	c4 98       	cbi	0x18, 4	; 24
     d9e:	00 00       	nop
     da0:	00 00       	nop
     da2:	00 00       	nop
     da4:	80 e0       	ldi	r24, 0x00	; 0
     da6:	90 e0       	ldi	r25, 0x00	; 0
     da8:	a0 e0       	ldi	r26, 0x00	; 0
     daa:	b0 e0       	ldi	r27, 0x00	; 0
     dac:	0b c0       	rjmp	.+22     	; 0xdc4 <rf12_txdata+0x3d6>
     dae:	81 3a       	cpi	r24, 0xA1	; 161
     db0:	26 e8       	ldi	r18, 0x86	; 134
     db2:	92 07       	cpc	r25, r18
     db4:	21 e0       	ldi	r18, 0x01	; 1
     db6:	a2 07       	cpc	r26, r18
     db8:	20 e0       	ldi	r18, 0x00	; 0
     dba:	b2 07       	cpc	r27, r18
     dbc:	29 f0       	breq	.+10     	; 0xdc8 <rf12_txdata+0x3da>
     dbe:	01 96       	adiw	r24, 0x01	; 1
     dc0:	a1 1d       	adc	r26, r1
     dc2:	b1 1d       	adc	r27, r1
     dc4:	b6 9b       	sbis	0x16, 6	; 22
     dc6:	f3 cf       	rjmp	.-26     	; 0xdae <rf12_txdata+0x3c0>
     dc8:	c4 9a       	sbi	0x18, 4	; 24
     dca:	27 2f       	mov	r18, r23
     dcc:	33 27       	eor	r19, r19
     dce:	38 6b       	ori	r19, 0xB8	; 184
     dd0:	c4 98       	cbi	0x18, 4	; 24
     dd2:	83 2f       	mov	r24, r19
     dd4:	99 27       	eor	r25, r25
     dd6:	8f b9       	out	0x0f, r24	; 15
     dd8:	77 9b       	sbis	0x0e, 7	; 14
     dda:	fe cf       	rjmp	.-4      	; 0xdd8 <rf12_txdata+0x3ea>
     ddc:	8f b1       	in	r24, 0x0f	; 15
     dde:	2f b9       	out	0x0f, r18	; 15
     de0:	77 9b       	sbis	0x0e, 7	; 14
     de2:	fe cf       	rjmp	.-4      	; 0xde0 <rf12_txdata+0x3f2>
     de4:	8f b1       	in	r24, 0x0f	; 15
     de6:	c4 9a       	sbi	0x18, 4	; 24
     de8:	c4 98       	cbi	0x18, 4	; 24
     dea:	00 00       	nop
     dec:	00 00       	nop
     dee:	00 00       	nop
     df0:	80 e0       	ldi	r24, 0x00	; 0
     df2:	90 e0       	ldi	r25, 0x00	; 0
     df4:	a0 e0       	ldi	r26, 0x00	; 0
     df6:	b0 e0       	ldi	r27, 0x00	; 0
     df8:	0b c0       	rjmp	.+22     	; 0xe10 <rf12_txdata+0x422>
     dfa:	81 3a       	cpi	r24, 0xA1	; 161
     dfc:	26 e8       	ldi	r18, 0x86	; 134
     dfe:	92 07       	cpc	r25, r18
     e00:	21 e0       	ldi	r18, 0x01	; 1
     e02:	a2 07       	cpc	r26, r18
     e04:	20 e0       	ldi	r18, 0x00	; 0
     e06:	b2 07       	cpc	r27, r18
     e08:	29 f0       	breq	.+10     	; 0xe14 <rf12_txdata+0x426>
     e0a:	01 96       	adiw	r24, 0x01	; 1
     e0c:	a1 1d       	adc	r26, r1
     e0e:	b1 1d       	adc	r27, r1
     e10:	b6 9b       	sbis	0x16, 6	; 22
     e12:	f3 cf       	rjmp	.-26     	; 0xdfa <rf12_txdata+0x40c>
     e14:	c4 9a       	sbi	0x18, 4	; 24
     e16:	c4 98       	cbi	0x18, 4	; 24
     e18:	88 eb       	ldi	r24, 0xB8	; 184
     e1a:	8f b9       	out	0x0f, r24	; 15
     e1c:	77 9b       	sbis	0x0e, 7	; 14
     e1e:	fe cf       	rjmp	.-4      	; 0xe1c <rf12_txdata+0x42e>
     e20:	8f b1       	in	r24, 0x0f	; 15
     e22:	8a ea       	ldi	r24, 0xAA	; 170
     e24:	8f b9       	out	0x0f, r24	; 15
     e26:	77 9b       	sbis	0x0e, 7	; 14
     e28:	fe cf       	rjmp	.-4      	; 0xe26 <rf12_txdata+0x438>
     e2a:	8f b1       	in	r24, 0x0f	; 15
     e2c:	c4 9a       	sbi	0x18, 4	; 24
     e2e:	c4 98       	cbi	0x18, 4	; 24
     e30:	00 00       	nop
     e32:	00 00       	nop
     e34:	00 00       	nop
     e36:	80 e0       	ldi	r24, 0x00	; 0
     e38:	90 e0       	ldi	r25, 0x00	; 0
     e3a:	a0 e0       	ldi	r26, 0x00	; 0
     e3c:	b0 e0       	ldi	r27, 0x00	; 0
     e3e:	0b c0       	rjmp	.+22     	; 0xe56 <rf12_txdata+0x468>
     e40:	81 3a       	cpi	r24, 0xA1	; 161
     e42:	26 e8       	ldi	r18, 0x86	; 134
     e44:	92 07       	cpc	r25, r18
     e46:	21 e0       	ldi	r18, 0x01	; 1
     e48:	a2 07       	cpc	r26, r18
     e4a:	20 e0       	ldi	r18, 0x00	; 0
     e4c:	b2 07       	cpc	r27, r18
     e4e:	29 f0       	breq	.+10     	; 0xe5a <rf12_txdata+0x46c>
     e50:	01 96       	adiw	r24, 0x01	; 1
     e52:	a1 1d       	adc	r26, r1
     e54:	b1 1d       	adc	r27, r1
     e56:	b6 9b       	sbis	0x16, 6	; 22
     e58:	f3 cf       	rjmp	.-26     	; 0xe40 <rf12_txdata+0x452>
     e5a:	c4 9a       	sbi	0x18, 4	; 24
     e5c:	c4 98       	cbi	0x18, 4	; 24
     e5e:	88 eb       	ldi	r24, 0xB8	; 184
     e60:	8f b9       	out	0x0f, r24	; 15
     e62:	77 9b       	sbis	0x0e, 7	; 14
     e64:	fe cf       	rjmp	.-4      	; 0xe62 <rf12_txdata+0x474>
     e66:	8f b1       	in	r24, 0x0f	; 15
     e68:	8a ea       	ldi	r24, 0xAA	; 170
     e6a:	8f b9       	out	0x0f, r24	; 15
     e6c:	77 9b       	sbis	0x0e, 7	; 14
     e6e:	fe cf       	rjmp	.-4      	; 0xe6c <rf12_txdata+0x47e>
     e70:	8f b1       	in	r24, 0x0f	; 15
     e72:	c4 9a       	sbi	0x18, 4	; 24
     e74:	c4 98       	cbi	0x18, 4	; 24
     e76:	00 00       	nop
     e78:	00 00       	nop
     e7a:	00 00       	nop
     e7c:	80 e0       	ldi	r24, 0x00	; 0
     e7e:	90 e0       	ldi	r25, 0x00	; 0
     e80:	a0 e0       	ldi	r26, 0x00	; 0
     e82:	b0 e0       	ldi	r27, 0x00	; 0
     e84:	0b c0       	rjmp	.+22     	; 0xe9c <rf12_txdata+0x4ae>
     e86:	81 3a       	cpi	r24, 0xA1	; 161
     e88:	26 e8       	ldi	r18, 0x86	; 134
     e8a:	92 07       	cpc	r25, r18
     e8c:	21 e0       	ldi	r18, 0x01	; 1
     e8e:	a2 07       	cpc	r26, r18
     e90:	20 e0       	ldi	r18, 0x00	; 0
     e92:	b2 07       	cpc	r27, r18
     e94:	29 f0       	breq	.+10     	; 0xea0 <rf12_txdata+0x4b2>
     e96:	01 96       	adiw	r24, 0x01	; 1
     e98:	a1 1d       	adc	r26, r1
     e9a:	b1 1d       	adc	r27, r1
     e9c:	b6 9b       	sbis	0x16, 6	; 22
     e9e:	f3 cf       	rjmp	.-26     	; 0xe86 <rf12_txdata+0x498>
     ea0:	c4 9a       	sbi	0x18, 4	; 24
     ea2:	c4 98       	cbi	0x18, 4	; 24
     ea4:	82 e8       	ldi	r24, 0x82	; 130
     ea6:	8f b9       	out	0x0f, r24	; 15
     ea8:	77 9b       	sbis	0x0e, 7	; 14
     eaa:	fe cf       	rjmp	.-4      	; 0xea8 <rf12_txdata+0x4ba>
     eac:	8f b1       	in	r24, 0x0f	; 15
     eae:	88 e0       	ldi	r24, 0x08	; 8
     eb0:	8f b9       	out	0x0f, r24	; 15
     eb2:	77 9b       	sbis	0x0e, 7	; 14
     eb4:	fe cf       	rjmp	.-4      	; 0xeb2 <rf12_txdata+0x4c4>
     eb6:	9b c0       	rjmp	.+310    	; 0xfee <rf12_txdata+0x600>
     eb8:	ba 01       	movw	r22, r20
     eba:	66 0f       	add	r22, r22
     ebc:	77 1f       	adc	r23, r23
     ebe:	81 e2       	ldi	r24, 0x21	; 33
     ec0:	90 e1       	ldi	r25, 0x10	; 16
     ec2:	68 27       	eor	r22, r24
     ec4:	79 27       	eor	r23, r25
     ec6:	40 cf       	rjmp	.-384    	; 0xd48 <rf12_txdata+0x35a>
     ec8:	44 0f       	add	r20, r20
     eca:	55 1f       	adc	r21, r21
     ecc:	81 e2       	ldi	r24, 0x21	; 33
     ece:	90 e1       	ldi	r25, 0x10	; 16
     ed0:	48 27       	eor	r20, r24
     ed2:	59 27       	eor	r21, r25
     ed4:	30 cf       	rjmp	.-416    	; 0xd36 <rf12_txdata+0x348>
     ed6:	a9 01       	movw	r20, r18
     ed8:	44 0f       	add	r20, r20
     eda:	55 1f       	adc	r21, r21
     edc:	81 e2       	ldi	r24, 0x21	; 33
     ede:	90 e1       	ldi	r25, 0x10	; 16
     ee0:	48 27       	eor	r20, r24
     ee2:	59 27       	eor	r21, r25
     ee4:	1e cf       	rjmp	.-452    	; 0xd22 <rf12_txdata+0x334>
     ee6:	22 0f       	add	r18, r18
     ee8:	33 1f       	adc	r19, r19
     eea:	81 e2       	ldi	r24, 0x21	; 33
     eec:	90 e1       	ldi	r25, 0x10	; 16
     eee:	28 27       	eor	r18, r24
     ef0:	39 27       	eor	r19, r25
     ef2:	0c cf       	rjmp	.-488    	; 0xd0c <rf12_txdata+0x31e>
     ef4:	22 0f       	add	r18, r18
     ef6:	33 1f       	adc	r19, r19
     ef8:	81 e2       	ldi	r24, 0x21	; 33
     efa:	90 e1       	ldi	r25, 0x10	; 16
     efc:	28 27       	eor	r18, r24
     efe:	39 27       	eor	r19, r25
     f00:	fc ce       	rjmp	.-520    	; 0xcfa <rf12_txdata+0x30c>
     f02:	22 0f       	add	r18, r18
     f04:	33 1f       	adc	r19, r19
     f06:	81 e2       	ldi	r24, 0x21	; 33
     f08:	90 e1       	ldi	r25, 0x10	; 16
     f0a:	28 27       	eor	r18, r24
     f0c:	39 27       	eor	r19, r25
     f0e:	ec ce       	rjmp	.-552    	; 0xce8 <rf12_txdata+0x2fa>
     f10:	22 0f       	add	r18, r18
     f12:	33 1f       	adc	r19, r19
     f14:	81 e2       	ldi	r24, 0x21	; 33
     f16:	90 e1       	ldi	r25, 0x10	; 16
     f18:	28 27       	eor	r18, r24
     f1a:	39 27       	eor	r19, r25
     f1c:	dc ce       	rjmp	.-584    	; 0xcd6 <rf12_txdata+0x2e8>
     f1e:	9b 01       	movw	r18, r22
     f20:	22 0f       	add	r18, r18
     f22:	33 1f       	adc	r19, r19
     f24:	81 e2       	ldi	r24, 0x21	; 33
     f26:	90 e1       	ldi	r25, 0x10	; 16
     f28:	28 27       	eor	r18, r24
     f2a:	39 27       	eor	r19, r25
     f2c:	cb ce       	rjmp	.-618    	; 0xcc4 <rf12_txdata+0x2d6>
     f2e:	21 e2       	ldi	r18, 0x21	; 33
     f30:	30 e1       	ldi	r19, 0x10	; 16
     f32:	ac 01       	movw	r20, r24
     f34:	44 0f       	add	r20, r20
     f36:	55 1f       	adc	r21, r21
     f38:	ca 01       	movw	r24, r20
     f3a:	82 27       	eor	r24, r18
     f3c:	93 27       	eor	r25, r19
     f3e:	97 ff       	sbrs	r25, 7
     f40:	4c ce       	rjmp	.-872    	; 0xbda <rf12_txdata+0x1ec>
     f42:	22 0f       	add	r18, r18
     f44:	33 1f       	adc	r19, r19
     f46:	21 62       	ori	r18, 0x21	; 33
     f48:	30 61       	ori	r19, 0x10	; 16
     f4a:	44 0f       	add	r20, r20
     f4c:	55 1f       	adc	r21, r21
     f4e:	ca 01       	movw	r24, r20
     f50:	82 27       	eor	r24, r18
     f52:	93 27       	eor	r25, r19
     f54:	97 ff       	sbrs	r25, 7
     f56:	4a ce       	rjmp	.-876    	; 0xbec <rf12_txdata+0x1fe>
     f58:	22 0f       	add	r18, r18
     f5a:	33 1f       	adc	r19, r19
     f5c:	81 e2       	ldi	r24, 0x21	; 33
     f5e:	90 e1       	ldi	r25, 0x10	; 16
     f60:	28 27       	eor	r18, r24
     f62:	39 27       	eor	r19, r25
     f64:	44 0f       	add	r20, r20
     f66:	55 1f       	adc	r21, r21
     f68:	ca 01       	movw	r24, r20
     f6a:	82 27       	eor	r24, r18
     f6c:	93 27       	eor	r25, r19
     f6e:	97 ff       	sbrs	r25, 7
     f70:	46 ce       	rjmp	.-884    	; 0xbfe <rf12_txdata+0x210>
     f72:	22 0f       	add	r18, r18
     f74:	33 1f       	adc	r19, r19
     f76:	81 e2       	ldi	r24, 0x21	; 33
     f78:	90 e1       	ldi	r25, 0x10	; 16
     f7a:	28 27       	eor	r18, r24
     f7c:	39 27       	eor	r19, r25
     f7e:	44 0f       	add	r20, r20
     f80:	55 1f       	adc	r21, r21
     f82:	ca 01       	movw	r24, r20
     f84:	82 27       	eor	r24, r18
     f86:	93 27       	eor	r25, r19
     f88:	97 ff       	sbrs	r25, 7
     f8a:	42 ce       	rjmp	.-892    	; 0xc10 <rf12_txdata+0x222>
     f8c:	22 0f       	add	r18, r18
     f8e:	33 1f       	adc	r19, r19
     f90:	81 e2       	ldi	r24, 0x21	; 33
     f92:	90 e1       	ldi	r25, 0x10	; 16
     f94:	28 27       	eor	r18, r24
     f96:	39 27       	eor	r19, r25
     f98:	fa 01       	movw	r30, r20
     f9a:	ee 0f       	add	r30, r30
     f9c:	ff 1f       	adc	r31, r31
     f9e:	cf 01       	movw	r24, r30
     fa0:	82 27       	eor	r24, r18
     fa2:	93 27       	eor	r25, r19
     fa4:	97 ff       	sbrs	r25, 7
     fa6:	3e ce       	rjmp	.-900    	; 0xc24 <rf12_txdata+0x236>
     fa8:	a9 01       	movw	r20, r18
     faa:	44 0f       	add	r20, r20
     fac:	55 1f       	adc	r21, r21
     fae:	81 e2       	ldi	r24, 0x21	; 33
     fb0:	90 e1       	ldi	r25, 0x10	; 16
     fb2:	48 27       	eor	r20, r24
     fb4:	59 27       	eor	r21, r25
     fb6:	9f 01       	movw	r18, r30
     fb8:	22 0f       	add	r18, r18
     fba:	33 1f       	adc	r19, r19
     fbc:	c9 01       	movw	r24, r18
     fbe:	84 27       	eor	r24, r20
     fc0:	95 27       	eor	r25, r21
     fc2:	97 ff       	sbrs	r25, 7
     fc4:	3a ce       	rjmp	.-908    	; 0xc3a <rf12_txdata+0x24c>
     fc6:	44 0f       	add	r20, r20
     fc8:	55 1f       	adc	r21, r21
     fca:	81 e2       	ldi	r24, 0x21	; 33
     fcc:	90 e1       	ldi	r25, 0x10	; 16
     fce:	48 27       	eor	r20, r24
     fd0:	59 27       	eor	r21, r25
     fd2:	22 0f       	add	r18, r18
     fd4:	33 1f       	adc	r19, r19
     fd6:	24 27       	eor	r18, r20
     fd8:	35 27       	eor	r19, r21
     fda:	37 ff       	sbrs	r19, 7
     fdc:	36 ce       	rjmp	.-916    	; 0xc4a <rf12_txdata+0x25c>
     fde:	ba 01       	movw	r22, r20
     fe0:	66 0f       	add	r22, r22
     fe2:	77 1f       	adc	r23, r23
     fe4:	81 e2       	ldi	r24, 0x21	; 33
     fe6:	90 e1       	ldi	r25, 0x10	; 16
     fe8:	68 27       	eor	r22, r24
     fea:	79 27       	eor	r23, r25
     fec:	31 ce       	rjmp	.-926    	; 0xc50 <rf12_txdata+0x262>
     fee:	8f b1       	in	r24, 0x0f	; 15
     ff0:	c4 9a       	sbi	0x18, 4	; 24
     ff2:	df 91       	pop	r29
     ff4:	cf 91       	pop	r28
     ff6:	1f 91       	pop	r17
     ff8:	0f 91       	pop	r16
     ffa:	08 95       	ret

00000ffc <usart_init>:

//----------------------------------------------------------------------------
//Init serielle Schnittstelle
void usart_init(void) 
{ 
     ffc:	88 e0       	ldi	r24, 0x08	; 8
     ffe:	8a b9       	out	0x0a, r24	; 10
  	//Enable TXEN im Register UCR TX-Data Enable
	UCR =(1 << TXEN);
	//Teiler wird gesetzt 
	UBRR=(SYSCLK / (BAUD_RATE * 16L) - 1);
    1000:	86 e4       	ldi	r24, 0x46	; 70
    1002:	89 b9       	out	0x09, r24	; 9
    1004:	08 95       	ret

00001006 <__vector_11>:
}

//----------------------------------------------------------------------------
//Routine für die Serielle Ausgabe eines Zeichens
int usart_write_char(char c)
{
	if (c == '\n')
		usart_write_char('\r');
	//Warten solange bis Zeichen gesendet wurde
	while(!(USR & (1<<UDRE)));
	//Ausgabe des Zeichens
	UDR = c;
	return(0);
}
//------------------------------------------------------------------------------
void usart_write (char *Buffer,...)
{
	va_list ap;
	va_start (ap, Buffer);	
	
	int format_flag;
	char str_buffer[10];
	char str_null_buffer[10];
	char move = 0;
	char Base = 0;
	int tmp = 0;
		
	//Ausgabe der Zeichen
	while (*Buffer != 0)
		{
		if (*Buffer == '%')
			{
			*Buffer++;
			if (isdigit(*Buffer)>0)
				{
				str_null_buffer[0] = *Buffer++;
				str_null_buffer[1] = '\0';
				move = atoi(str_null_buffer);
				}
			switch (format_flag = *Buffer++)
				{
				case 'b':
					Base = 2;
					goto ConversionLoop;
				case 'c':
					//Int to char
					format_flag = va_arg(ap,int);
					usart_write_char(format_flag++); 
					break;
				case 'i':
					Base = 10;
					goto ConversionLoop;
				case 'o':
					Base = 8;
					goto ConversionLoop;
				case 'x':
					Base = 16;
					//****************************
					ConversionLoop:
					//****************************
					itoa(va_arg(ap,int),str_buffer,Base);
					int b=0;
					while (str_buffer[b++] != 0){};
					b--;
					if (b<move)
						{
						move -=b;
						for (tmp = 0;tmp<move;tmp++)
							{
							str_null_buffer[tmp] = '0';
							}
						//tmp ++;
						str_null_buffer[tmp] = '\0';
						strcat(str_null_buffer,str_buffer);
						strcpy(str_buffer,str_null_buffer);
						}
					usart_write_str(str_buffer);
					move =0;
					break;
				}
			
			}	
		else
			{
			usart_write_char (*Buffer++);
			}
		}
	va_end(ap);
}

//----------------------------------------------------------------------------
//Ausgabe eines Strings
void usart_write_str(char *str)
{
	while (*str)
	{
		usart_write_char(*str++);
	}
}

//----------------------------------------------------------------------------
//Empfang eines Zeichens
SIGNAL (SIG_USART_RECV)
{
    1006:	1f 92       	push	r1
    1008:	0f 92       	push	r0
    100a:	0f b6       	in	r0, 0x3f	; 63
    100c:	0f 92       	push	r0
    100e:	11 24       	eor	r1, r1
    1010:	8f 93       	push	r24
    1012:	9f 93       	push	r25
    1014:	ef 93       	push	r30
    1016:	ff 93       	push	r31
	unsigned char receive_char;
	receive_char = (UDR);
    1018:	9c b1       	in	r25, 0x0c	; 12

	if (usart_status.usart_ready)
    101a:	80 91 ef 00 	lds	r24, 0x00EF
    101e:	80 ff       	sbrs	r24, 0
    1020:	06 c0       	rjmp	.+12     	; 0x102e <__vector_11+0x28>
	{
		usart_status.usart_rx_ovl = 1;
    1022:	80 91 ef 00 	lds	r24, 0x00EF
    1026:	82 60       	ori	r24, 0x02	; 2
    1028:	80 93 ef 00 	sts	0x00EF, r24
    102c:	1e c0       	rjmp	.+60     	; 0x106a <__vector_11+0x64>
		return; 
	}

	if (receive_char == '\r')
    102e:	9d 30       	cpi	r25, 0x0D	; 13
    1030:	79 f0       	breq	.+30     	; 0x1050 <__vector_11+0x4a>
	{
		usart_rx_buffer[buffercounter] = 0;
		buffercounter = 0;
		usart_status.usart_ready = 1;
		return;    
	}

	if (buffercounter < BUFFER_SIZE - 1)
    1032:	80 91 ee 00 	lds	r24, 0x00EE
    1036:	83 36       	cpi	r24, 0x63	; 99
    1038:	c0 f4       	brcc	.+48     	; 0x106a <__vector_11+0x64>
	{
		usart_rx_buffer[buffercounter++] = receive_char;    
    103a:	80 91 ee 00 	lds	r24, 0x00EE
    103e:	e8 2f       	mov	r30, r24
    1040:	ff 27       	eor	r31, r31
    1042:	e0 51       	subi	r30, 0x10	; 16
    1044:	ff 4f       	sbci	r31, 0xFF	; 255
    1046:	90 83       	st	Z, r25
    1048:	8f 5f       	subi	r24, 0xFF	; 255
    104a:	80 93 ee 00 	sts	0x00EE, r24
    104e:	0d c0       	rjmp	.+26     	; 0x106a <__vector_11+0x64>
    1050:	e0 91 ee 00 	lds	r30, 0x00EE
    1054:	ff 27       	eor	r31, r31
    1056:	e0 51       	subi	r30, 0x10	; 16
    1058:	ff 4f       	sbci	r31, 0xFF	; 255
    105a:	10 82       	st	Z, r1
    105c:	10 92 ee 00 	sts	0x00EE, r1
    1060:	80 91 ef 00 	lds	r24, 0x00EF
    1064:	81 60       	ori	r24, 0x01	; 1
    1066:	80 93 ef 00 	sts	0x00EF, r24
    106a:	ff 91       	pop	r31
    106c:	ef 91       	pop	r30
    106e:	9f 91       	pop	r25
    1070:	8f 91       	pop	r24
    1072:	0f 90       	pop	r0
    1074:	0f be       	out	0x3f, r0	; 63
    1076:	0f 90       	pop	r0
    1078:	1f 90       	pop	r1
    107a:	18 95       	reti

0000107c <usart_write_char>:
    107c:	98 2f       	mov	r25, r24
    107e:	8a 30       	cpi	r24, 0x0A	; 10
    1080:	19 f0       	breq	.+6      	; 0x1088 <usart_write_char+0xc>
    1082:	5d 9b       	sbis	0x0b, 5	; 11
    1084:	fe cf       	rjmp	.-4      	; 0x1082 <usart_write_char+0x6>
    1086:	05 c0       	rjmp	.+10     	; 0x1092 <usart_write_char+0x16>
    1088:	5d 9b       	sbis	0x0b, 5	; 11
    108a:	fe cf       	rjmp	.-4      	; 0x1088 <usart_write_char+0xc>
    108c:	8d e0       	ldi	r24, 0x0D	; 13
    108e:	8c b9       	out	0x0c, r24	; 12
    1090:	f8 cf       	rjmp	.-16     	; 0x1082 <usart_write_char+0x6>
    1092:	9c b9       	out	0x0c, r25	; 12
    1094:	80 e0       	ldi	r24, 0x00	; 0
    1096:	90 e0       	ldi	r25, 0x00	; 0
    1098:	08 95       	ret

0000109a <usart_write_str>:
    109a:	1f 93       	push	r17
    109c:	cf 93       	push	r28
    109e:	df 93       	push	r29
    10a0:	ec 01       	movw	r28, r24
    10a2:	18 81       	ld	r17, Y
    10a4:	11 23       	and	r17, r17
    10a6:	71 f0       	breq	.+28     	; 0x10c4 <usart_write_str+0x2a>
    10a8:	21 96       	adiw	r28, 0x01	; 1
    10aa:	1a 30       	cpi	r17, 0x0A	; 10
    10ac:	39 f0       	breq	.+14     	; 0x10bc <usart_write_str+0x22>
    10ae:	5d 9b       	sbis	0x0b, 5	; 11
    10b0:	fe cf       	rjmp	.-4      	; 0x10ae <usart_write_str+0x14>
    10b2:	1c b9       	out	0x0c, r17	; 12
    10b4:	18 81       	ld	r17, Y
    10b6:	11 23       	and	r17, r17
    10b8:	b9 f7       	brne	.-18     	; 0x10a8 <usart_write_str+0xe>
    10ba:	04 c0       	rjmp	.+8      	; 0x10c4 <usart_write_str+0x2a>
    10bc:	8d e0       	ldi	r24, 0x0D	; 13
    10be:	0e 94 3e 08 	call	0x107c	; 0x107c <usart_write_char>
    10c2:	f5 cf       	rjmp	.-22     	; 0x10ae <usart_write_str+0x14>
    10c4:	df 91       	pop	r29
    10c6:	cf 91       	pop	r28
    10c8:	1f 91       	pop	r17
    10ca:	08 95       	ret

000010cc <usart_write>:
    10cc:	bf 92       	push	r11
    10ce:	cf 92       	push	r12
    10d0:	df 92       	push	r13
    10d2:	ef 92       	push	r14
    10d4:	ff 92       	push	r15
    10d6:	0f 93       	push	r16
    10d8:	1f 93       	push	r17
    10da:	cf 93       	push	r28
    10dc:	df 93       	push	r29
    10de:	cd b7       	in	r28, 0x3d	; 61
    10e0:	de b7       	in	r29, 0x3e	; 62
    10e2:	66 97       	sbiw	r28, 0x16	; 22
    10e4:	0f b6       	in	r0, 0x3f	; 63
    10e6:	f8 94       	cli
    10e8:	de bf       	out	0x3e, r29	; 62
    10ea:	0f be       	out	0x3f, r0	; 63
    10ec:	cd bf       	out	0x3d, r28	; 61
    10ee:	fe 01       	movw	r30, r28
    10f0:	b2 96       	adiw	r30, 0x22	; 34
    10f2:	e1 90       	ld	r14, Z+
    10f4:	f1 90       	ld	r15, Z+
    10f6:	fa 83       	std	Y+2, r31	; 0x02
    10f8:	e9 83       	std	Y+1, r30	; 0x01
    10fa:	bb 24       	eor	r11, r11
    10fc:	8d e0       	ldi	r24, 0x0D	; 13
    10fe:	c8 2e       	mov	r12, r24
    1100:	d1 2c       	mov	r13, r1
    1102:	cc 0e       	add	r12, r28
    1104:	dd 1e       	adc	r13, r29
    1106:	a8 c0       	rjmp	.+336    	; 0x1258 <usart_write+0x18c>
    1108:	15 32       	cpi	r17, 0x25	; 37
    110a:	49 f0       	breq	.+18     	; 0x111e <usart_write+0x52>
    110c:	1a 30       	cpi	r17, 0x0A	; 10
    110e:	69 f1       	breq	.+90     	; 0x116a <usart_write+0x9e>
    1110:	5d 9b       	sbis	0x0b, 5	; 11
    1112:	fe cf       	rjmp	.-4      	; 0x1110 <usart_write+0x44>
    1114:	08 94       	sec
    1116:	e1 1c       	adc	r14, r1
    1118:	f1 1c       	adc	r15, r1
    111a:	1c b9       	out	0x0c, r17	; 12
    111c:	9d c0       	rjmp	.+314    	; 0x1258 <usart_write+0x18c>
    111e:	87 01       	movw	r16, r14
    1120:	0f 5f       	subi	r16, 0xFF	; 255
    1122:	1f 4f       	sbci	r17, 0xFF	; 255
    1124:	f7 01       	movw	r30, r14
    1126:	21 81       	ldd	r18, Z+1	; 0x01
    1128:	82 2f       	mov	r24, r18
    112a:	99 27       	eor	r25, r25
    112c:	c0 97       	sbiw	r24, 0x30	; 48
    112e:	0a 97       	sbiw	r24, 0x0a	; 10
    1130:	48 f1       	brcs	.+82     	; 0x1184 <usart_write+0xb8>
    1132:	f8 01       	movw	r30, r16
    1134:	81 91       	ld	r24, Z+
    1136:	7f 01       	movw	r14, r30
    1138:	89 36       	cpi	r24, 0x69	; 105
    113a:	91 f1       	breq	.+100    	; 0x11a0 <usart_write+0xd4>
    113c:	8a 36       	cpi	r24, 0x6A	; 106
    113e:	c8 f4       	brcc	.+50     	; 0x1172 <usart_write+0xa6>
    1140:	82 36       	cpi	r24, 0x62	; 98
    1142:	09 f4       	brne	.+2      	; 0x1146 <usart_write+0x7a>
    1144:	7c c0       	rjmp	.+248    	; 0x123e <usart_write+0x172>
    1146:	83 36       	cpi	r24, 0x63	; 99
    1148:	09 f0       	breq	.+2      	; 0x114c <usart_write+0x80>
    114a:	86 c0       	rjmp	.+268    	; 0x1258 <usart_write+0x18c>
    114c:	e9 81       	ldd	r30, Y+1	; 0x01
    114e:	fa 81       	ldd	r31, Y+2	; 0x02
    1150:	32 96       	adiw	r30, 0x02	; 2
    1152:	fa 83       	std	Y+2, r31	; 0x02
    1154:	e9 83       	std	Y+1, r30	; 0x01
    1156:	32 97       	sbiw	r30, 0x02	; 2
    1158:	10 81       	ld	r17, Z
    115a:	1a 30       	cpi	r17, 0x0A	; 10
    115c:	09 f4       	brne	.+2      	; 0x1160 <usart_write+0x94>
    115e:	78 c0       	rjmp	.+240    	; 0x1250 <usart_write+0x184>
    1160:	5d 99       	sbic	0x0b, 5	; 11
    1162:	db cf       	rjmp	.-74     	; 0x111a <usart_write+0x4e>
    1164:	5d 9b       	sbis	0x0b, 5	; 11
    1166:	fc cf       	rjmp	.-8      	; 0x1160 <usart_write+0x94>
    1168:	d8 cf       	rjmp	.-80     	; 0x111a <usart_write+0x4e>
    116a:	8d e0       	ldi	r24, 0x0D	; 13
    116c:	0e 94 3e 08 	call	0x107c	; 0x107c <usart_write_char>
    1170:	cf cf       	rjmp	.-98     	; 0x1110 <usart_write+0x44>
    1172:	8f 36       	cpi	r24, 0x6F	; 111
    1174:	09 f4       	brne	.+2      	; 0x1178 <usart_write+0xac>
    1176:	60 c0       	rjmp	.+192    	; 0x1238 <usart_write+0x16c>
    1178:	88 37       	cpi	r24, 0x78	; 120
    117a:	09 f0       	breq	.+2      	; 0x117e <usart_write+0xb2>
    117c:	6d c0       	rjmp	.+218    	; 0x1258 <usart_write+0x18c>
    117e:	40 e1       	ldi	r20, 0x10	; 16
    1180:	50 e0       	ldi	r21, 0x00	; 0
    1182:	10 c0       	rjmp	.+32     	; 0x11a4 <usart_write+0xd8>
    1184:	2b 83       	std	Y+3, r18	; 0x03
    1186:	0f 5f       	subi	r16, 0xFF	; 255
    1188:	1f 4f       	sbci	r17, 0xFF	; 255
    118a:	1c 82       	std	Y+4, r1	; 0x04
    118c:	ce 01       	movw	r24, r28
    118e:	03 96       	adiw	r24, 0x03	; 3
    1190:	0e 94 41 09 	call	0x1282	; 0x1282 <atoi>
    1194:	b8 2e       	mov	r11, r24
    1196:	f8 01       	movw	r30, r16
    1198:	81 91       	ld	r24, Z+
    119a:	7f 01       	movw	r14, r30
    119c:	89 36       	cpi	r24, 0x69	; 105
    119e:	71 f6       	brne	.-100    	; 0x113c <usart_write+0x70>
    11a0:	4a e0       	ldi	r20, 0x0A	; 10
    11a2:	50 e0       	ldi	r21, 0x00	; 0
    11a4:	e9 81       	ldd	r30, Y+1	; 0x01
    11a6:	fa 81       	ldd	r31, Y+2	; 0x02
    11a8:	32 96       	adiw	r30, 0x02	; 2
    11aa:	fa 83       	std	Y+2, r31	; 0x02
    11ac:	e9 83       	std	Y+1, r30	; 0x01
    11ae:	b6 01       	movw	r22, r12
    11b0:	92 91       	ld	r25, -Z
    11b2:	82 91       	ld	r24, -Z
    11b4:	0e 94 71 09 	call	0x12e2	; 0x12e2 <itoa>
    11b8:	f6 01       	movw	r30, r12
    11ba:	81 91       	ld	r24, Z+
    11bc:	88 23       	and	r24, r24
    11be:	e9 f7       	brne	.-6      	; 0x11ba <usart_write+0xee>
    11c0:	9f 01       	movw	r18, r30
    11c2:	2c 19       	sub	r18, r12
    11c4:	3d 09       	sbc	r19, r13
    11c6:	21 50       	subi	r18, 0x01	; 1
    11c8:	30 40       	sbci	r19, 0x00	; 0
    11ca:	8b 2d       	mov	r24, r11
    11cc:	99 27       	eor	r25, r25
    11ce:	28 17       	cp	r18, r24
    11d0:	39 07       	cpc	r19, r25
    11d2:	f4 f4       	brge	.+60     	; 0x1210 <usart_write+0x144>
    11d4:	b2 1a       	sub	r11, r18
    11d6:	8b 2d       	mov	r24, r11
    11d8:	99 27       	eor	r25, r25
    11da:	18 16       	cp	r1, r24
    11dc:	19 06       	cpc	r1, r25
    11de:	94 f5       	brge	.+100    	; 0x1244 <usart_write+0x178>
    11e0:	8e 01       	movw	r16, r28
    11e2:	0d 5f       	subi	r16, 0xFD	; 253
    11e4:	1f 4f       	sbci	r17, 0xFF	; 255
    11e6:	f8 01       	movw	r30, r16
    11e8:	20 e3       	ldi	r18, 0x30	; 48
    11ea:	80 0f       	add	r24, r16
    11ec:	91 1f       	adc	r25, r17
    11ee:	21 93       	st	Z+, r18
    11f0:	8e 17       	cp	r24, r30
    11f2:	9f 07       	cpc	r25, r31
    11f4:	e1 f7       	brne	.-8      	; 0x11ee <usart_write+0x122>
    11f6:	e0 1b       	sub	r30, r16
    11f8:	f1 0b       	sbc	r31, r17
    11fa:	e0 0f       	add	r30, r16
    11fc:	f1 1f       	adc	r31, r17
    11fe:	10 82       	st	Z, r1
    1200:	b6 01       	movw	r22, r12
    1202:	c8 01       	movw	r24, r16
    1204:	0e 94 5f 09 	call	0x12be	; 0x12be <strcat>
    1208:	b8 01       	movw	r22, r16
    120a:	c6 01       	movw	r24, r12
    120c:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <strcpy>
    1210:	8d 85       	ldd	r24, Y+13	; 0x0d
    1212:	88 23       	and	r24, r24
    1214:	59 f0       	breq	.+22     	; 0x122c <usart_write+0x160>
    1216:	f6 01       	movw	r30, r12
    1218:	9d e0       	ldi	r25, 0x0D	; 13
    121a:	31 96       	adiw	r30, 0x01	; 1
    121c:	8a 30       	cpi	r24, 0x0A	; 10
    121e:	41 f0       	breq	.+16     	; 0x1230 <usart_write+0x164>
    1220:	5d 9b       	sbis	0x0b, 5	; 11
    1222:	fe cf       	rjmp	.-4      	; 0x1220 <usart_write+0x154>
    1224:	8c b9       	out	0x0c, r24	; 12
    1226:	80 81       	ld	r24, Z
    1228:	88 23       	and	r24, r24
    122a:	b9 f7       	brne	.-18     	; 0x121a <usart_write+0x14e>
    122c:	bb 24       	eor	r11, r11
    122e:	14 c0       	rjmp	.+40     	; 0x1258 <usart_write+0x18c>
    1230:	5d 9b       	sbis	0x0b, 5	; 11
    1232:	fe cf       	rjmp	.-4      	; 0x1230 <usart_write+0x164>
    1234:	9c b9       	out	0x0c, r25	; 12
    1236:	f4 cf       	rjmp	.-24     	; 0x1220 <usart_write+0x154>
    1238:	48 e0       	ldi	r20, 0x08	; 8
    123a:	50 e0       	ldi	r21, 0x00	; 0
    123c:	b3 cf       	rjmp	.-154    	; 0x11a4 <usart_write+0xd8>
    123e:	42 e0       	ldi	r20, 0x02	; 2
    1240:	50 e0       	ldi	r21, 0x00	; 0
    1242:	b0 cf       	rjmp	.-160    	; 0x11a4 <usart_write+0xd8>
    1244:	e0 e0       	ldi	r30, 0x00	; 0
    1246:	f0 e0       	ldi	r31, 0x00	; 0
    1248:	8e 01       	movw	r16, r28
    124a:	0d 5f       	subi	r16, 0xFD	; 253
    124c:	1f 4f       	sbci	r17, 0xFF	; 255
    124e:	d5 cf       	rjmp	.-86     	; 0x11fa <usart_write+0x12e>
    1250:	8d e0       	ldi	r24, 0x0D	; 13
    1252:	0e 94 3e 08 	call	0x107c	; 0x107c <usart_write_char>
    1256:	84 cf       	rjmp	.-248    	; 0x1160 <usart_write+0x94>
    1258:	f7 01       	movw	r30, r14
    125a:	10 81       	ld	r17, Z
    125c:	11 23       	and	r17, r17
    125e:	09 f0       	breq	.+2      	; 0x1262 <usart_write+0x196>
    1260:	53 cf       	rjmp	.-346    	; 0x1108 <usart_write+0x3c>
    1262:	66 96       	adiw	r28, 0x16	; 22
    1264:	0f b6       	in	r0, 0x3f	; 63
    1266:	f8 94       	cli
    1268:	de bf       	out	0x3e, r29	; 62
    126a:	0f be       	out	0x3f, r0	; 63
    126c:	cd bf       	out	0x3d, r28	; 61
    126e:	df 91       	pop	r29
    1270:	cf 91       	pop	r28
    1272:	1f 91       	pop	r17
    1274:	0f 91       	pop	r16
    1276:	ff 90       	pop	r15
    1278:	ef 90       	pop	r14
    127a:	df 90       	pop	r13
    127c:	cf 90       	pop	r12
    127e:	bf 90       	pop	r11
    1280:	08 95       	ret

00001282 <atoi>:
    1282:	fc 01       	movw	r30, r24
    1284:	88 27       	eor	r24, r24
    1286:	99 27       	eor	r25, r25
    1288:	e8 94       	clt
    128a:	21 91       	ld	r18, Z+
    128c:	20 32       	cpi	r18, 0x20	; 32
    128e:	e9 f3       	breq	.-6      	; 0x128a <atoi+0x8>
    1290:	29 30       	cpi	r18, 0x09	; 9
    1292:	10 f0       	brcs	.+4      	; 0x1298 <atoi+0x16>
    1294:	2e 30       	cpi	r18, 0x0E	; 14
    1296:	c8 f3       	brcs	.-14     	; 0x128a <atoi+0x8>
    1298:	2b 32       	cpi	r18, 0x2B	; 43
    129a:	41 f0       	breq	.+16     	; 0x12ac <atoi+0x2a>
    129c:	2d 32       	cpi	r18, 0x2D	; 45
    129e:	39 f4       	brne	.+14     	; 0x12ae <atoi+0x2c>
    12a0:	68 94       	set
    12a2:	04 c0       	rjmp	.+8      	; 0x12ac <atoi+0x2a>
    12a4:	0e 94 92 09 	call	0x1324	; 0x1324 <__mulhi_const_10>
    12a8:	82 0f       	add	r24, r18
    12aa:	91 1d       	adc	r25, r1
    12ac:	21 91       	ld	r18, Z+
    12ae:	20 53       	subi	r18, 0x30	; 48
    12b0:	2a 30       	cpi	r18, 0x0A	; 10
    12b2:	c0 f3       	brcs	.-16     	; 0x12a4 <atoi+0x22>
    12b4:	1e f4       	brtc	.+6      	; 0x12bc <atoi+0x3a>
    12b6:	90 95       	com	r25
    12b8:	81 95       	neg	r24
    12ba:	9f 4f       	sbci	r25, 0xFF	; 255
    12bc:	08 95       	ret

000012be <strcat>:
    12be:	fb 01       	movw	r30, r22
    12c0:	dc 01       	movw	r26, r24
    12c2:	0d 90       	ld	r0, X+
    12c4:	00 20       	and	r0, r0
    12c6:	e9 f7       	brne	.-6      	; 0x12c2 <strcat+0x4>
    12c8:	11 97       	sbiw	r26, 0x01	; 1
    12ca:	01 90       	ld	r0, Z+
    12cc:	0d 92       	st	X+, r0
    12ce:	00 20       	and	r0, r0
    12d0:	e1 f7       	brne	.-8      	; 0x12ca <strcat+0xc>
    12d2:	08 95       	ret

000012d4 <strcpy>:
    12d4:	fb 01       	movw	r30, r22
    12d6:	dc 01       	movw	r26, r24
    12d8:	01 90       	ld	r0, Z+
    12da:	0d 92       	st	X+, r0
    12dc:	00 20       	and	r0, r0
    12de:	e1 f7       	brne	.-8      	; 0x12d8 <strcpy+0x4>
    12e0:	08 95       	ret

000012e2 <itoa>:
    12e2:	fb 01       	movw	r30, r22
    12e4:	9f 01       	movw	r18, r30
    12e6:	e8 94       	clt
    12e8:	42 30       	cpi	r20, 0x02	; 2
    12ea:	c4 f0       	brlt	.+48     	; 0x131c <itoa+0x3a>
    12ec:	45 32       	cpi	r20, 0x25	; 37
    12ee:	b4 f4       	brge	.+44     	; 0x131c <itoa+0x3a>
    12f0:	4a 30       	cpi	r20, 0x0A	; 10
    12f2:	29 f4       	brne	.+10     	; 0x12fe <itoa+0x1c>
    12f4:	97 fb       	bst	r25, 7
    12f6:	1e f4       	brtc	.+6      	; 0x12fe <itoa+0x1c>
    12f8:	90 95       	com	r25
    12fa:	81 95       	neg	r24
    12fc:	9f 4f       	sbci	r25, 0xFF	; 255
    12fe:	64 2f       	mov	r22, r20
    1300:	77 27       	eor	r23, r23
    1302:	0e 94 e7 09 	call	0x13ce	; 0x13ce <__udivmodhi4>
    1306:	80 5d       	subi	r24, 0xD0	; 208
    1308:	8a 33       	cpi	r24, 0x3A	; 58
    130a:	0c f0       	brlt	.+2      	; 0x130e <itoa+0x2c>
    130c:	89 5d       	subi	r24, 0xD9	; 217
    130e:	81 93       	st	Z+, r24
    1310:	cb 01       	movw	r24, r22
    1312:	00 97       	sbiw	r24, 0x00	; 0
    1314:	a1 f7       	brne	.-24     	; 0x12fe <itoa+0x1c>
    1316:	16 f4       	brtc	.+4      	; 0x131c <itoa+0x3a>
    1318:	5d e2       	ldi	r21, 0x2D	; 45
    131a:	51 93       	st	Z+, r21
    131c:	10 82       	st	Z, r1
    131e:	c9 01       	movw	r24, r18
    1320:	0c 94 9a 09 	jmp	0x1334	; 0x1334 <strrev>

00001324 <__mulhi_const_10>:
    1324:	7a e0       	ldi	r23, 0x0A	; 10
    1326:	97 9f       	mul	r25, r23
    1328:	90 2d       	mov	r25, r0
    132a:	87 9f       	mul	r24, r23
    132c:	80 2d       	mov	r24, r0
    132e:	91 0d       	add	r25, r1
    1330:	11 24       	eor	r1, r1
    1332:	08 95       	ret

00001334 <strrev>:
    1334:	dc 01       	movw	r26, r24
    1336:	fc 01       	movw	r30, r24
    1338:	67 2f       	mov	r22, r23
    133a:	71 91       	ld	r23, Z+
    133c:	77 23       	and	r23, r23
    133e:	e1 f7       	brne	.-8      	; 0x1338 <strrev+0x4>
    1340:	32 97       	sbiw	r30, 0x02	; 2
    1342:	04 c0       	rjmp	.+8      	; 0x134c <strrev+0x18>
    1344:	7c 91       	ld	r23, X
    1346:	6d 93       	st	X+, r22
    1348:	70 83       	st	Z, r23
    134a:	62 91       	ld	r22, -Z
    134c:	ae 17       	cp	r26, r30
    134e:	bf 07       	cpc	r27, r31
    1350:	c8 f3       	brcs	.-14     	; 0x1344 <strrev+0x10>
    1352:	08 95       	ret

00001354 <__udivmodsi4>:
    1354:	a1 e2       	ldi	r26, 0x21	; 33
    1356:	1a 2e       	mov	r1, r26
    1358:	aa 1b       	sub	r26, r26
    135a:	bb 1b       	sub	r27, r27
    135c:	fd 01       	movw	r30, r26
    135e:	0d c0       	rjmp	.+26     	; 0x137a <__udivmodsi4_ep>

00001360 <__udivmodsi4_loop>:
    1360:	aa 1f       	adc	r26, r26
    1362:	bb 1f       	adc	r27, r27
    1364:	ee 1f       	adc	r30, r30
    1366:	ff 1f       	adc	r31, r31
    1368:	a2 17       	cp	r26, r18
    136a:	b3 07       	cpc	r27, r19
    136c:	e4 07       	cpc	r30, r20
    136e:	f5 07       	cpc	r31, r21
    1370:	20 f0       	brcs	.+8      	; 0x137a <__udivmodsi4_ep>
    1372:	a2 1b       	sub	r26, r18
    1374:	b3 0b       	sbc	r27, r19
    1376:	e4 0b       	sbc	r30, r20
    1378:	f5 0b       	sbc	r31, r21

0000137a <__udivmodsi4_ep>:
    137a:	66 1f       	adc	r22, r22
    137c:	77 1f       	adc	r23, r23
    137e:	88 1f       	adc	r24, r24
    1380:	99 1f       	adc	r25, r25
    1382:	1a 94       	dec	r1
    1384:	69 f7       	brne	.-38     	; 0x1360 <__udivmodsi4_loop>
    1386:	60 95       	com	r22
    1388:	70 95       	com	r23
    138a:	80 95       	com	r24
    138c:	90 95       	com	r25
    138e:	9b 01       	movw	r18, r22
    1390:	ac 01       	movw	r20, r24
    1392:	bd 01       	movw	r22, r26
    1394:	cf 01       	movw	r24, r30
    1396:	08 95       	ret

00001398 <__divmodsi4>:
    1398:	97 fb       	bst	r25, 7
    139a:	09 2e       	mov	r0, r25
    139c:	05 26       	eor	r0, r21
    139e:	0e d0       	rcall	.+28     	; 0x13bc <__divmodsi4_neg1>
    13a0:	57 fd       	sbrc	r21, 7
    13a2:	04 d0       	rcall	.+8      	; 0x13ac <__divmodsi4_neg2>
    13a4:	d7 df       	rcall	.-82     	; 0x1354 <__udivmodsi4>
    13a6:	0a d0       	rcall	.+20     	; 0x13bc <__divmodsi4_neg1>
    13a8:	00 1c       	adc	r0, r0
    13aa:	38 f4       	brcc	.+14     	; 0x13ba <__divmodsi4_exit>

000013ac <__divmodsi4_neg2>:
    13ac:	50 95       	com	r21
    13ae:	40 95       	com	r20
    13b0:	30 95       	com	r19
    13b2:	21 95       	neg	r18
    13b4:	3f 4f       	sbci	r19, 0xFF	; 255
    13b6:	4f 4f       	sbci	r20, 0xFF	; 255
    13b8:	5f 4f       	sbci	r21, 0xFF	; 255

000013ba <__divmodsi4_exit>:
    13ba:	08 95       	ret

000013bc <__divmodsi4_neg1>:
    13bc:	f6 f7       	brtc	.-4      	; 0x13ba <__divmodsi4_exit>
    13be:	90 95       	com	r25
    13c0:	80 95       	com	r24
    13c2:	70 95       	com	r23
    13c4:	61 95       	neg	r22
    13c6:	7f 4f       	sbci	r23, 0xFF	; 255
    13c8:	8f 4f       	sbci	r24, 0xFF	; 255
    13ca:	9f 4f       	sbci	r25, 0xFF	; 255
    13cc:	08 95       	ret

000013ce <__udivmodhi4>:
    13ce:	aa 1b       	sub	r26, r26
    13d0:	bb 1b       	sub	r27, r27
    13d2:	51 e1       	ldi	r21, 0x11	; 17
    13d4:	07 c0       	rjmp	.+14     	; 0x13e4 <__udivmodhi4_ep>

000013d6 <__udivmodhi4_loop>:
    13d6:	aa 1f       	adc	r26, r26
    13d8:	bb 1f       	adc	r27, r27
    13da:	a6 17       	cp	r26, r22
    13dc:	b7 07       	cpc	r27, r23
    13de:	10 f0       	brcs	.+4      	; 0x13e4 <__udivmodhi4_ep>
    13e0:	a6 1b       	sub	r26, r22
    13e2:	b7 0b       	sbc	r27, r23

000013e4 <__udivmodhi4_ep>:
    13e4:	88 1f       	adc	r24, r24
    13e6:	99 1f       	adc	r25, r25
    13e8:	5a 95       	dec	r21
    13ea:	a9 f7       	brne	.-22     	; 0x13d6 <__udivmodhi4_loop>
    13ec:	80 95       	com	r24
    13ee:	90 95       	com	r25
    13f0:	bc 01       	movw	r22, r24
    13f2:	cd 01       	movw	r24, r26
    13f4:	08 95       	ret

000013f6 <_exit>:
    13f6:	ff cf       	rjmp	.-2      	; 0x13f6 <_exit>
